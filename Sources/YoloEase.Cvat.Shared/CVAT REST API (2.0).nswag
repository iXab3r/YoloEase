{
  "runtime": "NetCore31",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "openapi: 3.0.3\r\ninfo:\r\n  title: CVAT REST API\r\n  version: 2.5 (2.0)\r\n  description: REST API for Computer Vision Annotation Tool (CVAT)\r\n  termsOfService: https://www.google.com/policies/terms/\r\n  contact:\r\n    name: CVAT.ai team\r\n    url: https://github.com/cvat-ai/cvat\r\n    email: support@cvat.ai\r\n  license:\r\n    name: MIT License\r\n    url: https://en.wikipedia.org/wiki/MIT_License\r\npaths:\r\n  /api/assets:\r\n    post:\r\n      operationId: assets_create\r\n      summary: Method saves new asset on the server and attaches it to a corresponding\r\n        guide\r\n      tags:\r\n      - assets\r\n      requestBody:\r\n        content:\r\n          multipart/form-data:\r\n            schema:\r\n              type: object\r\n              properties:\r\n                file:\r\n                  type: string\r\n                  format: binary\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/AssetRead'\r\n          description: ''\r\n  /api/assets/{uuid}:\r\n    get:\r\n      operationId: assets_retrieve\r\n      summary: Method returns an asset file\r\n      parameters:\r\n      - in: path\r\n        name: uuid\r\n        schema:\r\n          type: string\r\n          format: uuid\r\n        description: A UUID string identifying this asset.\r\n        required: true\r\n      tags:\r\n      - assets\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: Asset file\r\n    delete:\r\n      operationId: assets_destroy\r\n      summary: Method deletes a specific asset from the server\r\n      parameters:\r\n      - in: path\r\n        name: uuid\r\n        schema:\r\n          type: string\r\n          format: uuid\r\n        description: A UUID string identifying this asset.\r\n        required: true\r\n      tags:\r\n      - assets\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The asset has been deleted\r\n  /api/auth/login:\r\n    post:\r\n      operationId: auth_create_login\r\n      description: |-\r\n        Check the credentials and return the REST Token\r\n        if the credentials are valid and authenticated.\r\n        If email verification is enabled and the user has the unverified email,\r\n        an email with a confirmation link will be sent.\r\n        Calls Django Auth login method to register User ID\r\n        in Django session framework.\r\n\r\n        Accept the following POST parameters: username, email, password\r\n        Return the REST Framework Token Object's key.\r\n      tags:\r\n      - auth\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/LoginSerializerExRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      - {}\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Token'\r\n          description: ''\r\n  /api/auth/logout:\r\n    post:\r\n      operationId: auth_create_logout\r\n      description: |-\r\n        Calls Django logout method and delete the Token object\r\n        assigned to the current User object.\r\n\r\n        Accepts/Returns nothing.\r\n      tags:\r\n      - auth\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      - {}\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/RestAuthDetail'\r\n          description: ''\r\n  /api/auth/password/change:\r\n    post:\r\n      operationId: auth_create_password_change\r\n      description: |-\r\n        Calls Django Auth SetPasswordForm save method.\r\n\r\n        Accepts the following POST parameters: new_password1, new_password2\r\n        Returns the success/fail message.\r\n      tags:\r\n      - auth\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PasswordChangeRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/RestAuthDetail'\r\n          description: ''\r\n  /api/auth/password/reset:\r\n    post:\r\n      operationId: auth_create_password_reset\r\n      description: |-\r\n        Calls Django Auth PasswordResetForm save method.\r\n\r\n        Accepts the following POST parameters: email\r\n        Returns the success/fail message.\r\n      tags:\r\n      - auth\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PasswordResetSerializerExRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      - {}\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/RestAuthDetail'\r\n          description: ''\r\n  /api/auth/password/reset/confirm:\r\n    post:\r\n      operationId: auth_create_password_reset_confirm\r\n      description: |-\r\n        Password reset e-mail link is confirmed, therefore\r\n        this resets the user's password.\r\n\r\n        Accepts the following POST parameters: token, uid,\r\n            new_password1, new_password2\r\n        Returns the success/fail message.\r\n      tags:\r\n      - auth\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PasswordResetConfirmRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      - {}\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/RestAuthDetail'\r\n          description: ''\r\n  /api/auth/register:\r\n    post:\r\n      operationId: auth_create_register\r\n      tags:\r\n      - auth\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/RegisterSerializerWithSubscriptionsRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      - {}\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/RegisterSerializerWithSubscriptions'\r\n          description: ''\r\n  /api/auth/rules:\r\n    get:\r\n      operationId: auth_retrieve_rules\r\n      tags:\r\n      - auth\r\n      security:\r\n      - {}\r\n      responses:\r\n        '200':\r\n          description: No response body\r\n  /api/auth/signing:\r\n    post:\r\n      operationId: auth_create_signing\r\n      description: Signed URL contains a token which authenticates a user on the server.Signed\r\n        URL is valid during 30 seconds since signing.\r\n      summary: This method signs URL for access to the server\r\n      tags:\r\n      - auth\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/SigningRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: string\r\n          description: text URL\r\n  /api/auth/social:\r\n    get:\r\n      operationId: auth_list_social\r\n      summary: Method provides a list with integrated social accounts authentication.\r\n      tags:\r\n      - auth\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      - {}\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/SocialAuthMethods'\r\n          description: ''\r\n  /api/auth/social/{id}/login/:\r\n    get:\r\n      operationId: auth_retrieve_social_login\r\n      description: Redirects to the specified provider authentication page. After\r\n        successful authentication on the provider side, a redirect to the callback\r\n        endpoint is performed\r\n      summary: Redirects to provider authentication page\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: string\r\n        required: true\r\n      tags:\r\n      - auth\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: No response body\r\n  /api/auth/social/{id}/login/callback/:\r\n    get:\r\n      operationId: auth_retrieve_social_login_callback\r\n      description: Accepts a request from provider with code and state query parameters.\r\n        In case of successful authentication on the provider side, it will redirect\r\n        to the CVAT client\r\n      summary: Checks the authentication response from specified provider, redirects\r\n        to the CVAT client if successful.\r\n      parameters:\r\n      - in: query\r\n        name: code\r\n        schema:\r\n          type: string\r\n        description: Returned by provider\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: string\r\n        required: true\r\n      - in: query\r\n        name: state\r\n        schema:\r\n          type: string\r\n        description: Returned by provider\r\n      tags:\r\n      - auth\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: No response body\r\n  /api/auth/social/{id}/login/token/:\r\n    post:\r\n      operationId: auth_create_social_login_token\r\n      description: After successful authentication on the provider side, the provider\r\n        returns the 'code' parameter used to receive an authentication token required\r\n        for CVAT authentication.\r\n      summary: Method returns an authentication token based on code parameter\r\n      parameters:\r\n      - in: query\r\n        name: auth_params\r\n        schema:\r\n          type: string\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: string\r\n        required: true\r\n      - in: query\r\n        name: process\r\n        schema:\r\n          type: string\r\n      - in: query\r\n        name: scope\r\n        schema:\r\n          type: string\r\n      tags:\r\n      - auth\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/SocialLoginSerializerExRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      - {}\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Token'\r\n          description: ''\r\n  /api/cloudstorages:\r\n    get:\r\n      operationId: cloudstorages_list\r\n      summary: Returns a paginated list of storages\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: credentials_type\r\n        in: query\r\n        description: A simple equality filter for the credentials_type field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - KEY_SECRET_KEY_PAIR\r\n          - ACCOUNT_NAME_TOKEN_PAIR\r\n          - KEY_FILE_PATH\r\n          - ANONYMOUS_ACCESS\r\n          - CONNECTION_STRING\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''provider_type'',\r\n          ''name'', ''resource'', ''credentials_type'', ''owner'', ''description'',\r\n          ''id'']'\r\n        schema:\r\n          type: string\r\n      - name: name\r\n        in: query\r\n        description: A simple equality filter for the name field\r\n        schema:\r\n          type: string\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: owner\r\n        in: query\r\n        description: A simple equality filter for the owner field\r\n        schema:\r\n          type: string\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: provider_type\r\n        in: query\r\n        description: A simple equality filter for the provider_type field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - AWS_S3_BUCKET\r\n          - AZURE_CONTAINER\r\n          - GOOGLE_DRIVE\r\n          - GOOGLE_CLOUD_STORAGE\r\n      - name: resource\r\n        in: query\r\n        description: A simple equality filter for the resource field\r\n        schema:\r\n          type: string\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''provider_type'',\r\n          ''name'', ''resource'', ''credentials_type'', ''owner'', ''description'')'\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''provider_type'', ''name'', ''resource'', ''credentials_type'', ''owner'',\r\n          ''description'', ''id'']'\r\n        schema:\r\n          type: string\r\n      tags:\r\n      - cloudstorages\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedCloudStorageReadList'\r\n          description: ''\r\n    post:\r\n      operationId: cloudstorages_create\r\n      summary: Method creates a cloud storage with a specified characteristics\r\n      parameters:\r\n      - in: header\r\n        name: X-Organization\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Organization identifier\r\n      tags:\r\n      - cloudstorages\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/CloudStorageWriteRequest'\r\n            examples:\r\n              CreateAWSS3CloudStorageWithCredentials:\r\n                value:\r\n                  provider_type: AWS_S3_BUCKET\r\n                  resource: somebucket\r\n                  display_name: Bucket\r\n                  credentials_type: KEY_SECRET_KEY_PAIR\r\n                  key: XXX\r\n                  secret_key: XXX\r\n                  specific_attributes: region=eu-central-1\r\n                  description: Some description\r\n                  manifests:\r\n                  - manifest.jsonl\r\n                summary: Create AWS S3 cloud storage with credentials\r\n              CreateAWSS3CloudStorageWithoutCredentials:\r\n                value:\r\n                  provider_type: AWS_S3_BUCKET\r\n                  resource: somebucket\r\n                  display_name: Bucket\r\n                  credentials_type: ANONYMOUS_ACCESS\r\n                  manifests:\r\n                  - manifest.jsonl\r\n                summary: Create AWS S3 cloud storage without credentials\r\n              CreateAzureCloudStorage:\r\n                value:\r\n                  provider_type: AZURE_CONTAINER\r\n                  resource: sonecontainer\r\n                  display_name: Container\r\n                  credentials_type: ACCOUNT_NAME_TOKEN_PAIR\r\n                  account_name: someaccount\r\n                  session_token: xxx\r\n                  manifests:\r\n                  - manifest.jsonl\r\n                summary: Create Azure cloud storage\r\n              CreateGCS:\r\n                value:\r\n                  provider_type: GOOGLE_CLOUD_STORAGE\r\n                  resource: somebucket\r\n                  display_name: Bucket\r\n                  credentials_type: KEY_FILE_PATH\r\n                  key_file: file\r\n                  manifests:\r\n                  - manifest.jsonl\r\n                summary: Create GCS\r\n          multipart/form-data:\r\n            schema:\r\n              $ref: '#/components/schemas/CloudStorageWriteRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/CloudStorageRead'\r\n          description: ''\r\n  /api/cloudstorages/{id}:\r\n    get:\r\n      operationId: cloudstorages_retrieve\r\n      summary: Method returns details of a specific cloud storage\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this cloud storage.\r\n        required: true\r\n      tags:\r\n      - cloudstorages\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/CloudStorageRead'\r\n          description: ''\r\n    patch:\r\n      operationId: cloudstorages_partial_update\r\n      summary: Methods does a partial update of chosen fields in a cloud storage instance\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this cloud storage.\r\n        required: true\r\n      tags:\r\n      - cloudstorages\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedCloudStorageWriteRequest'\r\n            examples:\r\n              CreateAWSS3CloudStorageWithCredentials:\r\n                value:\r\n                  provider_type: AWS_S3_BUCKET\r\n                  resource: somebucket\r\n                  display_name: Bucket\r\n                  credentials_type: KEY_SECRET_KEY_PAIR\r\n                  key: XXX\r\n                  secret_key: XXX\r\n                  specific_attributes: region=eu-central-1\r\n                  description: Some description\r\n                  manifests:\r\n                  - manifest.jsonl\r\n                summary: Create AWS S3 cloud storage with credentials\r\n              CreateAWSS3CloudStorageWithoutCredentials:\r\n                value:\r\n                  provider_type: AWS_S3_BUCKET\r\n                  resource: somebucket\r\n                  display_name: Bucket\r\n                  credentials_type: ANONYMOUS_ACCESS\r\n                  manifests:\r\n                  - manifest.jsonl\r\n                summary: Create AWS S3 cloud storage without credentials\r\n              CreateAzureCloudStorage:\r\n                value:\r\n                  provider_type: AZURE_CONTAINER\r\n                  resource: sonecontainer\r\n                  display_name: Container\r\n                  credentials_type: ACCOUNT_NAME_TOKEN_PAIR\r\n                  account_name: someaccount\r\n                  session_token: xxx\r\n                  manifests:\r\n                  - manifest.jsonl\r\n                summary: Create Azure cloud storage\r\n              CreateGCS:\r\n                value:\r\n                  provider_type: GOOGLE_CLOUD_STORAGE\r\n                  resource: somebucket\r\n                  display_name: Bucket\r\n                  credentials_type: KEY_FILE_PATH\r\n                  key_file: file\r\n                  manifests:\r\n                  - manifest.jsonl\r\n                summary: Create GCS\r\n          multipart/form-data:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedCloudStorageWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/CloudStorageRead'\r\n          description: ''\r\n    delete:\r\n      operationId: cloudstorages_destroy\r\n      summary: Method deletes a specific cloud storage\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this cloud storage.\r\n        required: true\r\n      tags:\r\n      - cloudstorages\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The cloud storage has been removed\r\n  /api/cloudstorages/{id}/actions:\r\n    get:\r\n      operationId: cloudstorages_retrieve_actions\r\n      description: Method return allowed actions for cloud storage. It's required\r\n        for reading/writing\r\n      summary: Method returns allowed actions for the cloud storage\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this cloud storage.\r\n        required: true\r\n      tags:\r\n      - cloudstorages\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: string\r\n          description: Cloud Storage actions (GET | PUT | DELETE)\r\n  /api/cloudstorages/{id}/content:\r\n    get:\r\n      operationId: cloudstorages_retrieve_content\r\n      description: 'This method is deprecated and will be removed in version 2.6.0.\r\n        Please use the new version of API: /cloudstorages/id/content-v2/'\r\n      summary: Method returns a manifest content\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this cloud storage.\r\n        required: true\r\n      - in: query\r\n        name: manifest_path\r\n        schema:\r\n          type: string\r\n        description: Path to the manifest file in a cloud storage\r\n      tags:\r\n      - cloudstorages\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      deprecated: true\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  type: string\r\n          description: A manifest content\r\n  /api/cloudstorages/{id}/content-v2:\r\n    get:\r\n      operationId: cloudstorages_retrieve_content_v2\r\n      summary: Method returns the content of the cloud storage\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this cloud storage.\r\n        required: true\r\n      - in: query\r\n        name: manifest_path\r\n        schema:\r\n          type: string\r\n        description: Path to the manifest file in a cloud storage\r\n      - in: query\r\n        name: next_token\r\n        schema:\r\n          type: string\r\n        description: Used to continue listing files in the bucket\r\n      - in: query\r\n        name: page_size\r\n        schema:\r\n          type: integer\r\n      - in: query\r\n        name: prefix\r\n        schema:\r\n          type: string\r\n        description: Prefix to filter data\r\n      tags:\r\n      - cloudstorages\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/CloudStorageContent'\r\n          description: A manifest content\r\n  /api/cloudstorages/{id}/preview:\r\n    get:\r\n      operationId: cloudstorages_retrieve_preview\r\n      summary: Method returns a preview image from a cloud storage\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this cloud storage.\r\n        required: true\r\n      tags:\r\n      - cloudstorages\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: Cloud Storage preview\r\n        '400':\r\n          description: Failed to get cloud storage preview\r\n        '404':\r\n          description: Cloud Storage preview not found\r\n  /api/cloudstorages/{id}/status:\r\n    get:\r\n      operationId: cloudstorages_retrieve_status\r\n      summary: Method returns a cloud storage status\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this cloud storage.\r\n        required: true\r\n      tags:\r\n      - cloudstorages\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: string\r\n          description: Cloud Storage status (AVAILABLE | NOT_FOUND | FORBIDDEN)\r\n  /api/comments:\r\n    get:\r\n      operationId: comments_list\r\n      summary: Method returns a paginated list of comments\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''owner'', ''id'',\r\n          ''issue_id'', ''frame_id'', ''job_id'']'\r\n        schema:\r\n          type: string\r\n      - name: frame_id\r\n        in: query\r\n        description: A simple equality filter for the frame_id field\r\n        schema:\r\n          type: integer\r\n      - name: issue_id\r\n        in: query\r\n        description: A simple equality filter for the issue_id field\r\n        schema:\r\n          type: integer\r\n      - name: job_id\r\n        in: query\r\n        description: A simple equality filter for the job_id field\r\n        schema:\r\n          type: integer\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: owner\r\n        in: query\r\n        description: A simple equality filter for the owner field\r\n        schema:\r\n          type: string\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''owner'',)'\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''owner'', ''id'', ''issue_id'', ''frame_id'', ''job_id'']'\r\n        schema:\r\n          type: string\r\n      tags:\r\n      - comments\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedCommentReadList'\r\n          description: ''\r\n    post:\r\n      operationId: comments_create\r\n      summary: Method creates a comment\r\n      parameters:\r\n      - in: header\r\n        name: X-Organization\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Organization identifier\r\n      tags:\r\n      - comments\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/CommentWriteRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/CommentRead'\r\n          description: ''\r\n  /api/comments/{id}:\r\n    get:\r\n      operationId: comments_retrieve\r\n      summary: Method returns details of a comment\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this comment.\r\n        required: true\r\n      tags:\r\n      - comments\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/CommentRead'\r\n          description: ''\r\n    patch:\r\n      operationId: comments_partial_update\r\n      summary: Methods does a partial update of chosen fields in a comment\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this comment.\r\n        required: true\r\n      tags:\r\n      - comments\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedCommentWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/CommentRead'\r\n          description: ''\r\n    delete:\r\n      operationId: comments_destroy\r\n      summary: Method deletes a comment\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this comment.\r\n        required: true\r\n      tags:\r\n      - comments\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The comment has been deleted\r\n  /api/events:\r\n    get:\r\n      operationId: events_list\r\n      description: Receive logs from the server\r\n      summary: 'Method returns csv log file '\r\n      parameters:\r\n      - in: query\r\n        name: action\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - download\r\n        description: Used to start downloading process after annotation file had been\r\n          created\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Desired output file name\r\n      - in: query\r\n        name: from\r\n        schema:\r\n          type: string\r\n          format: date-time\r\n        description: Filter events after the datetime. If no 'from' or 'to' parameters\r\n          are passed, the last 30 days will be set.\r\n      - in: query\r\n        name: job_id\r\n        schema:\r\n          type: integer\r\n        description: Filter events by job ID\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Filter events by organization ID\r\n      - in: query\r\n        name: project_id\r\n        schema:\r\n          type: integer\r\n        description: Filter events by project ID\r\n      - in: query\r\n        name: query_id\r\n        schema:\r\n          type: string\r\n        description: ID of query request that need to check or download\r\n      - in: query\r\n        name: task_id\r\n        schema:\r\n          type: integer\r\n        description: Filter events by task ID\r\n      - in: query\r\n        name: to\r\n        schema:\r\n          type: string\r\n          format: date-time\r\n        description: Filter events before the datetime. If no 'from' or 'to' parameters\r\n          are passed, the last 30 days will be set.\r\n      - in: query\r\n        name: user_id\r\n        schema:\r\n          type: integer\r\n        description: Filter events by user ID\r\n      tags:\r\n      - events\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: Download of file started\r\n        '201':\r\n          description: CSV log file is ready for downloading\r\n        '202':\r\n          description: Creating a CSV log file has been started\r\n    post:\r\n      operationId: events_create\r\n      description: Sends logs to the Clickhouse if it is connected\r\n      summary: Method saves logs from a client on the server\r\n      parameters:\r\n      - in: header\r\n        name: X-Organization\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Organization identifier\r\n      tags:\r\n      - events\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/ClientEventsRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/ClientEvents'\r\n          description: ''\r\n  /api/functions:\r\n    get:\r\n      operationId: functions_list\r\n      summary: Method returns a paginated list of functions\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''name'', ''owner'',\r\n          ''provider'', ''type'', ''labels'', ''id'', ''updated_date'']'\r\n        schema:\r\n          type: string\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''name'', ''owner'',\r\n          ''provider'', ''type'', ''labels'')'\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''name'', ''owner'', ''provider'', ''type'', ''labels'', ''id'', ''updated_date'']'\r\n        schema:\r\n          type: string\r\n      tags:\r\n      - functions\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedFunctionList'\r\n          description: ''\r\n    post:\r\n      operationId: functions_create\r\n      summary: Method creates a function\r\n      tags:\r\n      - functions\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/FunctionRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Function'\r\n          description: ''\r\n  /api/functions/{id}:\r\n    get:\r\n      operationId: functions_retrieve\r\n      summary: Method returns details of a function\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this function.\r\n        required: true\r\n      tags:\r\n      - functions\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Function'\r\n          description: ''\r\n    delete:\r\n      operationId: functions_destroy\r\n      summary: Method deletes a function\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this function.\r\n        required: true\r\n      tags:\r\n      - functions\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The function has been deleted\r\n  /api/functions/{id}/preview:\r\n    get:\r\n      operationId: functions_retrieve_preview\r\n      summary: Method returns a preview image for the function\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this function.\r\n        required: true\r\n      tags:\r\n      - functions\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: Function image preview\r\n        '404':\r\n          description: Function image preview not found\r\n  /api/functions/{id}/run:\r\n    post:\r\n      operationId: functions_create_run\r\n      summary: Method runs a function\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this function.\r\n        required: true\r\n      tags:\r\n      - functions\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/FunctionRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Function'\r\n          description: ''\r\n  /api/functions/info:\r\n    get:\r\n      operationId: functions_info\r\n      summary: Method returns information about the required function arguments\r\n      tags:\r\n      - functions\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Function'\r\n          description: ''\r\n  /api/functions/requests/:\r\n    get:\r\n      operationId: functions_list_requests\r\n      summary: Method returns a list of requests\r\n      tags:\r\n      - functions\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Function'\r\n          description: ''\r\n    post:\r\n      operationId: functions_create_requests\r\n      summary: Method calls a function\r\n      tags:\r\n      - functions\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/FunctionRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Function'\r\n          description: ''\r\n  /api/functions/requests/{request_id}:\r\n    get:\r\n      operationId: functions_retrieve_requests\r\n      summary: Method returns the status of the request\r\n      parameters:\r\n      - in: path\r\n        name: request_id\r\n        schema:\r\n          type: string\r\n          pattern: ^\\S+$\r\n        required: true\r\n      tags:\r\n      - functions\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Function'\r\n          description: ''\r\n    delete:\r\n      operationId: functions_destroy_requests\r\n      summary: Method cancels the request\r\n      parameters:\r\n      - in: path\r\n        name: request_id\r\n        schema:\r\n          type: string\r\n          pattern: ^\\S+$\r\n        required: true\r\n      tags:\r\n      - functions\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: No response body\r\n  /api/guides:\r\n    post:\r\n      operationId: guides_create\r\n      summary: Method creates a new annotation guide binded to a project or to a task\r\n      tags:\r\n      - guides\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/AnnotationGuideWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/AnnotationGuideRead'\r\n          description: ''\r\n  /api/guides/{id}:\r\n    get:\r\n      operationId: guides_retrieve\r\n      summary: Method returns details of a specific annotation guide\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this annotation guide.\r\n        required: true\r\n      tags:\r\n      - guides\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/AnnotationGuideRead'\r\n          description: ''\r\n    patch:\r\n      operationId: guides_partial_update\r\n      summary: Methods does a partial update of chosen fields in an annotation guide\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this annotation guide.\r\n        required: true\r\n      tags:\r\n      - guides\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedAnnotationGuideWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/AnnotationGuideRead'\r\n          description: ''\r\n    delete:\r\n      operationId: guides_destroy\r\n      summary: Method deletes a specific annotation guide and all attached assets\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this annotation guide.\r\n        required: true\r\n      tags:\r\n      - guides\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The annotation guide has been deleted\r\n  /api/invitations:\r\n    get:\r\n      operationId: invitations_list\r\n      summary: Method returns a paginated list of invitations\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''owner'']'\r\n        schema:\r\n          type: string\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: owner\r\n        in: query\r\n        description: A simple equality filter for the owner field\r\n        schema:\r\n          type: string\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''owner'',)'\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''owner'', ''created_date'']'\r\n        schema:\r\n          type: string\r\n      tags:\r\n      - invitations\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedInvitationReadList'\r\n          description: ''\r\n    post:\r\n      operationId: invitations_create\r\n      summary: Method creates an invitation\r\n      parameters:\r\n      - in: header\r\n        name: X-Organization\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Organization identifier\r\n      tags:\r\n      - invitations\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/InvitationWriteRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/InvitationRead'\r\n          description: ''\r\n  /api/invitations/{key}:\r\n    get:\r\n      operationId: invitations_retrieve\r\n      summary: Method returns details of an invitation\r\n      parameters:\r\n      - in: path\r\n        name: key\r\n        schema:\r\n          type: string\r\n        description: A unique value identifying this invitation.\r\n        required: true\r\n      tags:\r\n      - invitations\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/InvitationRead'\r\n          description: ''\r\n    patch:\r\n      operationId: invitations_partial_update\r\n      summary: Methods does a partial update of chosen fields in an invitation\r\n      parameters:\r\n      - in: path\r\n        name: key\r\n        schema:\r\n          type: string\r\n        description: A unique value identifying this invitation.\r\n        required: true\r\n      tags:\r\n      - invitations\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedInvitationWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/InvitationRead'\r\n          description: ''\r\n    delete:\r\n      operationId: invitations_destroy\r\n      summary: Method deletes an invitation\r\n      parameters:\r\n      - in: path\r\n        name: key\r\n        schema:\r\n          type: string\r\n        description: A unique value identifying this invitation.\r\n        required: true\r\n      tags:\r\n      - invitations\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The invitation has been deleted\r\n  /api/issues:\r\n    get:\r\n      operationId: issues_list\r\n      summary: Method returns a paginated list of issues\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: assignee\r\n        in: query\r\n        description: A simple equality filter for the assignee field\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''owner'', ''assignee'',\r\n          ''id'', ''job_id'', ''task_id'', ''resolved'', ''frame_id'']'\r\n        schema:\r\n          type: string\r\n      - name: frame_id\r\n        in: query\r\n        description: A simple equality filter for the frame_id field\r\n        schema:\r\n          type: integer\r\n      - name: job_id\r\n        in: query\r\n        description: A simple equality filter for the job_id field\r\n        schema:\r\n          type: integer\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: owner\r\n        in: query\r\n        description: A simple equality filter for the owner field\r\n        schema:\r\n          type: string\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: resolved\r\n        in: query\r\n        description: A simple equality filter for the resolved field\r\n        schema:\r\n          type: boolean\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''owner'', ''assignee'')'\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''owner'', ''assignee'', ''id'', ''job_id'', ''task_id'', ''resolved'',\r\n          ''frame_id'']'\r\n        schema:\r\n          type: string\r\n      - name: task_id\r\n        in: query\r\n        description: A simple equality filter for the task_id field\r\n        schema:\r\n          type: integer\r\n      tags:\r\n      - issues\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedIssueReadList'\r\n          description: ''\r\n    post:\r\n      operationId: issues_create\r\n      summary: Method creates an issue\r\n      parameters:\r\n      - in: header\r\n        name: X-Organization\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Organization identifier\r\n      tags:\r\n      - issues\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/IssueWriteRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/IssueRead'\r\n          description: ''\r\n  /api/issues/{id}:\r\n    get:\r\n      operationId: issues_retrieve\r\n      summary: Method returns details of an issue\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this issue.\r\n        required: true\r\n      tags:\r\n      - issues\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/IssueRead'\r\n          description: ''\r\n    patch:\r\n      operationId: issues_partial_update\r\n      summary: Methods does a partial update of chosen fields in an issue\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this issue.\r\n        required: true\r\n      tags:\r\n      - issues\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedIssueWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/IssueRead'\r\n          description: ''\r\n    delete:\r\n      operationId: issues_destroy\r\n      summary: Method deletes an issue\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this issue.\r\n        required: true\r\n      tags:\r\n      - issues\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The issue has been deleted\r\n  /api/jobs:\r\n    get:\r\n      operationId: jobs_list\r\n      summary: Method returns a paginated list of jobs\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: assignee\r\n        in: query\r\n        description: A simple equality filter for the assignee field\r\n        schema:\r\n          type: string\r\n      - name: dimension\r\n        in: query\r\n        description: A simple equality filter for the dimension field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - 3d\r\n          - 2d\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''task_name'', ''project_name'',\r\n          ''assignee'', ''state'', ''stage'', ''id'', ''task_id'', ''project_id'',\r\n          ''updated_date'', ''dimension'', ''type'']'\r\n        schema:\r\n          type: string\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: project_id\r\n        in: query\r\n        description: A simple equality filter for the project_id field\r\n        schema:\r\n          type: integer\r\n      - name: project_name\r\n        in: query\r\n        description: A simple equality filter for the project_name field\r\n        schema:\r\n          type: string\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''task_name'', ''project_name'',\r\n          ''assignee'', ''state'', ''stage'')'\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''task_name'', ''project_name'', ''assignee'', ''state'', ''stage'', ''id'',\r\n          ''task_id'', ''project_id'', ''updated_date'', ''dimension'', ''type'']'\r\n        schema:\r\n          type: string\r\n      - name: stage\r\n        in: query\r\n        description: A simple equality filter for the stage field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - annotation\r\n          - validation\r\n          - acceptance\r\n      - name: state\r\n        in: query\r\n        description: A simple equality filter for the state field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - new\r\n          - in progress\r\n          - completed\r\n          - rejected\r\n      - name: task_id\r\n        in: query\r\n        description: A simple equality filter for the task_id field\r\n        schema:\r\n          type: integer\r\n      - name: task_name\r\n        in: query\r\n        description: A simple equality filter for the task_name field\r\n        schema:\r\n          type: string\r\n      - name: type\r\n        in: query\r\n        description: A simple equality filter for the type field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - annotation\r\n          - ground_truth\r\n      tags:\r\n      - jobs\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedJobReadList'\r\n          description: ''\r\n    post:\r\n      operationId: jobs_create\r\n      summary: Method creates a new job in the task\r\n      tags:\r\n      - jobs\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/JobWriteRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/JobRead'\r\n          description: ''\r\n  /api/jobs/{id}:\r\n    get:\r\n      operationId: jobs_retrieve\r\n      summary: Method returns details of a job\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      tags:\r\n      - jobs\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/JobRead'\r\n          description: ''\r\n    patch:\r\n      operationId: jobs_partial_update\r\n      summary: Methods does a partial update of chosen fields in a job\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      tags:\r\n      - jobs\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedJobWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/JobRead'\r\n          description: ''\r\n    delete:\r\n      operationId: jobs_destroy\r\n      description: |\r\n        Please note, that not every job can be removed. Currently,\r\n        it is only available for Ground Truth jobs.\r\n      summary: Method deletes a job and its related annotations\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      tags:\r\n      - jobs\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The job has been deleted\r\n  /api/jobs/{id}/annotations/:\r\n    get:\r\n      operationId: jobs_retrieve_annotations\r\n      summary: Method returns annotations for a specific job as a JSON document. If\r\n        format is specified, a zip archive is returned.\r\n      parameters:\r\n      - in: query\r\n        name: action\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - download\r\n        description: Used to start downloading process after annotation file had been\r\n          created\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Desired output file name\r\n      - in: query\r\n        name: format\r\n        schema:\r\n          type: string\r\n        description: |-\r\n          Desired output format name\r\n          You can get the list of supported formats at:\r\n          /server/annotation/formats\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n        description: Where need to save downloaded annotation\r\n      - in: query\r\n        name: use_default_location\r\n        schema:\r\n          type: boolean\r\n          default: true\r\n        description: Use the location that was configured in the task to export annotation\r\n      tags:\r\n      - jobs\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/AnnotationsRead'\r\n          description: Download of file started\r\n        '201':\r\n          description: Output file is ready for downloading\r\n        '202':\r\n          description: Exporting has been started\r\n        '405':\r\n          description: Format is not available\r\n    post:\r\n      operationId: jobs_create_annotations\r\n      description: |2\r\n\r\n        The request POST /api/jobs/id/annotations will initiate file upload and will create\r\n        the rq job on the server in which the process of annotations uploading from file\r\n        will be carried out. Please, use the PUT /api/jobs/id/annotations endpoint for checking status of the process.\r\n      summary: Method allows to initialize the process of the job annotation upload\r\n        from a local file or a cloud storage\r\n      parameters:\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Annotation file name\r\n      - in: query\r\n        name: format\r\n        schema:\r\n          type: string\r\n        description: |-\r\n          Input format name\r\n          You can get the list of supported formats at:\r\n          /server/annotation/formats\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n        description: where to import the annotation from\r\n      - in: query\r\n        name: use_default_location\r\n        schema:\r\n          type: boolean\r\n          default: true\r\n        description: Use the location that was configured in the task to import annotation\r\n      tags:\r\n      - jobs\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/AnnotationFileRequest'\r\n          multipart/form-data:\r\n            schema:\r\n              $ref: '#/components/schemas/AnnotationFileRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          description: Uploading has finished\r\n        '202':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/RqId'\r\n          description: Uploading has been started\r\n        '405':\r\n          description: Format is not available\r\n    put:\r\n      operationId: jobs_update_annotations\r\n      description: |2\r\n\r\n        To check the status of the process of uploading a job annotations from a file:\r\n\r\n        After initiating the annotations upload, you will receive an rq_id parameter.\r\n        Make sure to include this parameter as a query parameter in your subsequent\r\n        PUT /api/jobs/id/annotations requests to track the status of the annotations upload.\r\n      summary: Method performs an update of all annotations in a specific job or used\r\n        for uploading annotations from a file\r\n      parameters:\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Annotation file name\r\n      - in: query\r\n        name: format\r\n        schema:\r\n          type: string\r\n        description: |-\r\n          Input format name\r\n          You can get the list of supported formats at:\r\n          /server/annotation/formats\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n        description: where to import the annotation from\r\n      - in: query\r\n        name: rq_id\r\n        schema:\r\n          type: string\r\n        description: rq id\r\n      - in: query\r\n        name: use_default_location\r\n        schema:\r\n          type: boolean\r\n          default: true\r\n        description: Use the location that was configured in the task to import annotation\r\n      tags:\r\n      - jobs\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/JobAnnotationsUpdateRequest'\r\n          multipart/form-data:\r\n            schema:\r\n              $ref: '#/components/schemas/JobAnnotationsUpdateRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          description: Uploading has finished\r\n        '202':\r\n          description: Uploading has been started\r\n        '405':\r\n          description: Format is not available\r\n    patch:\r\n      operationId: jobs_partial_update_annotations\r\n      summary: Method performs a partial update of annotations in a specific job\r\n      parameters:\r\n      - in: query\r\n        name: action\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - create\r\n          - delete\r\n          - update\r\n        required: true\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      tags:\r\n      - jobs\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedLabeledDataRequest'\r\n          multipart/form-data:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedLabeledDataRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: Annotations successfully uploaded\r\n    delete:\r\n      operationId: jobs_destroy_annotations\r\n      summary: Method deletes all annotations for a specific job\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      tags:\r\n      - jobs\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The annotation has been deleted\r\n  /api/jobs/{id}/data:\r\n    get:\r\n      operationId: jobs_retrieve_data\r\n      summary: Method returns data for a specific job\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      - in: query\r\n        name: number\r\n        schema:\r\n          type: integer\r\n        description: A unique number value identifying chunk or frame\r\n      - in: query\r\n        name: quality\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - compressed\r\n          - original\r\n        description: Specifies the quality level of the requested data\r\n      - in: query\r\n        name: type\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - chunk\r\n          - context_image\r\n          - frame\r\n        description: Specifies the type of the requested data\r\n      tags:\r\n      - jobs\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: string\r\n                format: binary\r\n          description: Data of a specific type\r\n  /api/jobs/{id}/data/meta:\r\n    get:\r\n      operationId: jobs_retrieve_data_meta\r\n      summary: Method provides a meta information about media files which are related\r\n        with the job\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      tags:\r\n      - jobs\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/DataMetaRead'\r\n          description: ''\r\n    patch:\r\n      operationId: jobs_partial_update_data_meta\r\n      summary: Method provides a meta information about media files which are related\r\n        with the job\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      tags:\r\n      - tasks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedDataMetaWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/DataMetaRead'\r\n          description: ''\r\n  /api/jobs/{id}/dataset:\r\n    get:\r\n      operationId: jobs_retrieve_dataset\r\n      summary: Export job as a dataset in a specific format\r\n      parameters:\r\n      - in: query\r\n        name: action\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - download\r\n        description: Used to start downloading process after annotation file had been\r\n          created\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Desired output file name\r\n      - in: query\r\n        name: format\r\n        schema:\r\n          type: string\r\n        description: |-\r\n          Desired output format name\r\n          You can get the list of supported formats at:\r\n          /server/annotation/formats\r\n        required: true\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n        description: Where need to save downloaded dataset\r\n      - in: query\r\n        name: use_default_location\r\n        schema:\r\n          type: boolean\r\n          default: true\r\n        description: Use the location that was configured in the task to export dataset\r\n      tags:\r\n      - jobs\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: string\r\n                format: binary\r\n          description: Download of file started\r\n        '201':\r\n          description: Output file is ready for downloading\r\n        '202':\r\n          description: Exporting has been started\r\n        '405':\r\n          description: Format is not available\r\n  /api/jobs/{id}/preview:\r\n    get:\r\n      operationId: jobs_retrieve_preview\r\n      summary: Method returns a preview image for the job\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this job.\r\n        required: true\r\n      tags:\r\n      - jobs\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: Job image preview\r\n  /api/labels:\r\n    get:\r\n      operationId: labels_list\r\n      summary: Method returns a paginated list of labels\r\n      parameters:\r\n      - in: header\r\n        name: X-Organization\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - name: color\r\n        in: query\r\n        description: A simple equality filter for the color field\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''name'', ''parent'',\r\n          ''id'', ''type'', ''color'', ''parent_id'']'\r\n        schema:\r\n          type: string\r\n      - in: query\r\n        name: job_id\r\n        schema:\r\n          type: integer\r\n        description: A simple equality filter for job id\r\n      - name: name\r\n        in: query\r\n        description: A simple equality filter for the name field\r\n        schema:\r\n          type: string\r\n      - in: query\r\n        name: org\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Organization identifier\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: parent\r\n        in: query\r\n        description: A simple equality filter for the parent field\r\n        schema:\r\n          type: string\r\n      - name: parent_id\r\n        in: query\r\n        description: A simple equality filter for the parent_id field\r\n        schema:\r\n          type: integer\r\n      - in: query\r\n        name: project_id\r\n        schema:\r\n          type: integer\r\n        description: A simple equality filter for project id\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''name'', ''parent'')'\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''name'', ''parent'', ''id'', ''type'', ''color'', ''parent_id'']'\r\n        schema:\r\n          type: string\r\n      - in: query\r\n        name: task_id\r\n        schema:\r\n          type: integer\r\n        description: A simple equality filter for task id\r\n      - name: type\r\n        in: query\r\n        description: A simple equality filter for the type field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - bbox\r\n          - ellipse\r\n          - polygon\r\n          - polyline\r\n          - points\r\n          - cuboid\r\n          - cuboid_3d\r\n          - skeleton\r\n          - tag\r\n          - any\r\n      tags:\r\n      - labels\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedLabelList'\r\n          description: ''\r\n  /api/labels/{id}:\r\n    get:\r\n      operationId: labels_retrieve\r\n      summary: Method returns details of a label\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this label.\r\n        required: true\r\n      tags:\r\n      - labels\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Label'\r\n          description: ''\r\n    patch:\r\n      operationId: labels_partial_update\r\n      summary: Methods does a partial update of chosen fields in a labelTo modify\r\n        a sublabel, please use the PATCH method of the parent label\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this label.\r\n        required: true\r\n      tags:\r\n      - labels\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedLabelRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Label'\r\n          description: ''\r\n    delete:\r\n      operationId: labels_destroy\r\n      summary: Method deletes a label. To delete a sublabel, please use the PATCH\r\n        method of the parent label\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this label.\r\n        required: true\r\n      tags:\r\n      - labels\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The label has been deleted\r\n  /api/lambda/functions:\r\n    get:\r\n      operationId: lambda_list_functions\r\n      summary: Method returns a list of functions\r\n      tags:\r\n      - lambda\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: No response body\r\n  /api/lambda/functions/{func_id}:\r\n    get:\r\n      operationId: lambda_retrieve_functions\r\n      summary: Method returns the information about the function\r\n      parameters:\r\n      - in: path\r\n        name: func_id\r\n        schema:\r\n          type: string\r\n          pattern: ^[a-zA-Z0-9_.-]+$\r\n        required: true\r\n      tags:\r\n      - lambda\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: object\r\n                additionalProperties: {}\r\n          description: Information about the function\r\n    post:\r\n      operationId: lambda_create_functions\r\n      description: |\r\n        Allows to execute a function for immediate computation.\r\n\r\n        Intended for short-lived executions, useful for interactive calls.\r\n\r\n        When executed for interactive annotation, the job id must be specified\r\n        in the 'job' input field. The task id is not required in this case,\r\n        but if it is specified, it must match the job task id.\r\n      parameters:\r\n      - in: path\r\n        name: func_id\r\n        schema:\r\n          type: string\r\n          pattern: ^[a-zA-Z0-9_.-]+$\r\n        required: true\r\n      tags:\r\n      - lambda\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/OnlineFunctionCallRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: Returns function invocation results\r\n  /api/lambda/requests:\r\n    get:\r\n      operationId: lambda_list_requests\r\n      summary: Method returns a list of requests\r\n      tags:\r\n      - lambda\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/FunctionCall'\r\n          description: ''\r\n    post:\r\n      operationId: lambda_create_requests\r\n      summary: Method calls the function\r\n      parameters:\r\n      - in: header\r\n        name: X-Organization\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Organization identifier\r\n      tags:\r\n      - lambda\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/FunctionCallRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/FunctionCall'\r\n          description: ''\r\n  /api/lambda/requests/{id}:\r\n    get:\r\n      operationId: lambda_retrieve_requests\r\n      summary: Method returns the status of the request\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: string\r\n        description: Request id\r\n        required: true\r\n      tags:\r\n      - lambda\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/FunctionCall'\r\n          description: ''\r\n  /api/limits:\r\n    get:\r\n      operationId: limits_list\r\n      summary: Method returns a paginated list of limits according to query parameters\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''user_id'', ''user'',\r\n          ''id'']'\r\n        schema:\r\n          type: string\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''user_id'', ''user'', ''id'']'\r\n        schema:\r\n          type: string\r\n      - name: user\r\n        in: query\r\n        description: A simple equality filter for the user field\r\n        schema:\r\n          type: string\r\n      - name: user_id\r\n        in: query\r\n        description: A simple equality filter for the user_id field\r\n        schema:\r\n          type: integer\r\n      tags:\r\n      - limits\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedLimitList'\r\n          description: ''\r\n    post:\r\n      operationId: limits_create\r\n      summary: Method creates a limit\r\n      tags:\r\n      - limits\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/LimitRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Limit'\r\n          description: ''\r\n  /api/limits/{id}:\r\n    get:\r\n      operationId: limits_retrieve\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this limit.\r\n        required: true\r\n      tags:\r\n      - limits\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Limit'\r\n          description: ''\r\n    put:\r\n      operationId: limits_update\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this limit.\r\n        required: true\r\n      tags:\r\n      - limits\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/LimitRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Limit'\r\n          description: ''\r\n    patch:\r\n      operationId: limits_partial_update\r\n      summary: Method updates a limit\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this limit.\r\n        required: true\r\n      tags:\r\n      - limits\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedLimitRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Limit'\r\n          description: ''\r\n    delete:\r\n      operationId: limits_destroy\r\n      summary: Method deletes a limit\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this limit.\r\n        required: true\r\n      tags:\r\n      - limits\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The limit has been deleted\r\n  /api/limits/default:\r\n    get:\r\n      operationId: limits_retrieve_default\r\n      tags:\r\n      - limits\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Limit'\r\n          description: ''\r\n  /api/memberships:\r\n    get:\r\n      operationId: memberships_list\r\n      summary: Method returns a paginated list of memberships\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''user'', ''role'',\r\n          ''id'']'\r\n        schema:\r\n          type: string\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: role\r\n        in: query\r\n        description: A simple equality filter for the role field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - worker\r\n          - supervisor\r\n          - maintainer\r\n          - owner\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''user'', ''role'')'\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''user'', ''role'', ''id'']'\r\n        schema:\r\n          type: string\r\n      - name: user\r\n        in: query\r\n        description: A simple equality filter for the user field\r\n        schema:\r\n          type: string\r\n      tags:\r\n      - memberships\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedMembershipReadList'\r\n          description: ''\r\n  /api/memberships/{id}:\r\n    get:\r\n      operationId: memberships_retrieve\r\n      summary: Method returns details of a membership\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this membership.\r\n        required: true\r\n      tags:\r\n      - memberships\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/MembershipRead'\r\n          description: ''\r\n    patch:\r\n      operationId: memberships_partial_update\r\n      summary: Methods does a partial update of chosen fields in a membership\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this membership.\r\n        required: true\r\n      tags:\r\n      - memberships\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedMembershipWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/MembershipRead'\r\n          description: ''\r\n    delete:\r\n      operationId: memberships_destroy\r\n      summary: Method deletes a membership\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this membership.\r\n        required: true\r\n      tags:\r\n      - memberships\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The membership has been deleted\r\n  /api/organizations:\r\n    get:\r\n      operationId: organizations_list\r\n      summary: Method returns a paginated list of organizations\r\n      parameters:\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''name'', ''owner'',\r\n          ''id'', ''slug'']'\r\n        schema:\r\n          type: string\r\n      - name: name\r\n        in: query\r\n        description: A simple equality filter for the name field\r\n        schema:\r\n          type: string\r\n      - name: owner\r\n        in: query\r\n        description: A simple equality filter for the owner field\r\n        schema:\r\n          type: string\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''name'', ''owner'')'\r\n        schema:\r\n          type: string\r\n      - name: slug\r\n        in: query\r\n        description: A simple equality filter for the slug field\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''name'', ''owner'', ''id'', ''slug'']'\r\n        schema:\r\n          type: string\r\n      tags:\r\n      - organizations\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedOrganizationReadList'\r\n          description: ''\r\n    post:\r\n      operationId: organizations_create\r\n      summary: Method creates an organization\r\n      tags:\r\n      - organizations\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/OrganizationWriteRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/OrganizationRead'\r\n          description: ''\r\n  /api/organizations/{id}:\r\n    get:\r\n      operationId: organizations_retrieve\r\n      summary: Method returns details of an organization\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this organization.\r\n        required: true\r\n      tags:\r\n      - organizations\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/OrganizationRead'\r\n          description: ''\r\n    patch:\r\n      operationId: organizations_partial_update\r\n      summary: Methods does a partial update of chosen fields in an organization\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this organization.\r\n        required: true\r\n      tags:\r\n      - organizations\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedOrganizationWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/OrganizationRead'\r\n          description: ''\r\n    delete:\r\n      operationId: organizations_destroy\r\n      summary: Method deletes an organization\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this organization.\r\n        required: true\r\n      tags:\r\n      - organizations\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The organization has been deleted\r\n  /api/projects:\r\n    get:\r\n      operationId: projects_list\r\n      summary: Returns a paginated list of projects\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: assignee\r\n        in: query\r\n        description: A simple equality filter for the assignee field\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''name'', ''owner'',\r\n          ''assignee'', ''status'', ''id'', ''updated_date'']'\r\n        schema:\r\n          type: string\r\n      - name: name\r\n        in: query\r\n        description: A simple equality filter for the name field\r\n        schema:\r\n          type: string\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: owner\r\n        in: query\r\n        description: A simple equality filter for the owner field\r\n        schema:\r\n          type: string\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''name'', ''owner'',\r\n          ''assignee'', ''status'')'\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''name'', ''owner'', ''assignee'', ''status'', ''id'', ''updated_date'']'\r\n        schema:\r\n          type: string\r\n      - name: status\r\n        in: query\r\n        description: A simple equality filter for the status field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - annotation\r\n          - validation\r\n          - completed\r\n      tags:\r\n      - projects\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedProjectReadList'\r\n          description: ''\r\n    post:\r\n      operationId: projects_create\r\n      summary: Method creates a new project\r\n      parameters:\r\n      - in: header\r\n        name: X-Organization\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Organization identifier\r\n      tags:\r\n      - projects\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/ProjectWriteRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/ProjectRead'\r\n          description: ''\r\n  /api/projects/{id}:\r\n    get:\r\n      operationId: projects_retrieve\r\n      summary: Method returns details of a specific project\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this project.\r\n        required: true\r\n      tags:\r\n      - projects\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/ProjectRead'\r\n          description: ''\r\n    patch:\r\n      operationId: projects_partial_update\r\n      summary: Methods does a partial update of chosen fields in a project\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this project.\r\n        required: true\r\n      tags:\r\n      - projects\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedProjectWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/ProjectRead'\r\n          description: ''\r\n    delete:\r\n      operationId: projects_destroy\r\n      summary: Method deletes a specific project\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this project.\r\n        required: true\r\n      tags:\r\n      - projects\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The project has been deleted\r\n  /api/projects/{id}/annotations:\r\n    get:\r\n      operationId: projects_retrieve_annotations\r\n      summary: Method allows to download project annotations\r\n      parameters:\r\n      - in: query\r\n        name: action\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - download\r\n        description: Used to start downloading process after annotation file had been\r\n          created\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Desired output file name\r\n      - in: query\r\n        name: format\r\n        schema:\r\n          type: string\r\n        description: |-\r\n          Desired output format name\r\n          You can get the list of supported formats at:\r\n          /server/annotation/formats\r\n        required: true\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this project.\r\n        required: true\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n        description: Where need to save downloaded dataset\r\n      - in: query\r\n        name: use_default_location\r\n        schema:\r\n          type: boolean\r\n          default: true\r\n        description: Use the location that was configured in project to export annotation\r\n      tags:\r\n      - projects\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/AnnotationsRead'\r\n          description: Download of file started\r\n        '201':\r\n          description: Annotations file is ready to download\r\n        '202':\r\n          description: Dump of annotations has been started\r\n        '401':\r\n          description: Format is not specified\r\n        '405':\r\n          description: Format is not available\r\n  /api/projects/{id}/backup:\r\n    get:\r\n      operationId: projects_retrieve_backup\r\n      summary: Methods creates a backup copy of a project\r\n      parameters:\r\n      - in: query\r\n        name: action\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - download\r\n        description: Used to start downloading process after backup file had been\r\n          created\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Backup file name\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this project.\r\n        required: true\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n        description: Where need to save downloaded backup\r\n      - in: query\r\n        name: use_default_location\r\n        schema:\r\n          type: boolean\r\n          default: true\r\n        description: Use the location that was configured in project to export backup\r\n      tags:\r\n      - projects\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: Download of file started\r\n        '201':\r\n          description: Output backup file is ready for downloading\r\n        '202':\r\n          description: Creating a backup file has been started\r\n  /api/projects/{id}/dataset/:\r\n    get:\r\n      operationId: projects_retrieve_dataset\r\n      description: |2\r\n\r\n        To check the status of the process of importing a project dataset from a file:\r\n\r\n        After initiating the dataset upload, you will receive an rq_id parameter.\r\n        Make sure to include this parameter as a query parameter in your subsequent\r\n        GET /api/projects/id/dataset requests to track the status of the dataset import.\r\n        Also you should specify action parameter: action=import_status.\r\n      summary: Export project as a dataset in a specific format\r\n      parameters:\r\n      - in: query\r\n        name: action\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - download\r\n          - import_status\r\n        description: Used to start downloading process after annotation file had been\r\n          created\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Desired output file name\r\n      - in: query\r\n        name: format\r\n        schema:\r\n          type: string\r\n        description: |-\r\n          Desired output format name\r\n          You can get the list of supported formats at:\r\n          /server/annotation/formats\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this project.\r\n        required: true\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n        description: Where need to save downloaded dataset\r\n      - in: query\r\n        name: rq_id\r\n        schema:\r\n          type: string\r\n        description: rq id\r\n      - in: query\r\n        name: use_default_location\r\n        schema:\r\n          type: boolean\r\n          default: true\r\n        description: Use the location that was configured in project to import dataset\r\n      tags:\r\n      - projects\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: string\r\n                format: binary\r\n          description: Download of file started\r\n        '201':\r\n          description: Output file is ready for downloading\r\n        '202':\r\n          description: Exporting has been started\r\n        '405':\r\n          description: Format is not available\r\n    post:\r\n      operationId: projects_create_dataset\r\n      description: |2\r\n\r\n        The request POST /api/projects/id/dataset will initiate file upload and will create\r\n        the rq job on the server in which the process of dataset import from a file\r\n        will be carried out. Please, use the GET /api/projects/id/dataset endpoint for checking status of the process.\r\n      summary: Import dataset in specific format as a project or check status of dataset\r\n        import process\r\n      parameters:\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Dataset file name\r\n      - in: query\r\n        name: format\r\n        schema:\r\n          type: string\r\n        description: |-\r\n          Desired dataset format name\r\n          You can get the list of supported formats at:\r\n          /server/annotation/formats\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this project.\r\n        required: true\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n        description: Where to import the dataset from\r\n      - in: query\r\n        name: use_default_location\r\n        schema:\r\n          type: boolean\r\n          default: true\r\n        description: Use the location that was configured in the project to import\r\n          annotations\r\n      tags:\r\n      - projects\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/DatasetWriteRequest'\r\n          multipart/form-data:\r\n            schema:\r\n              $ref: '#/components/schemas/DatasetWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '202':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/RqId'\r\n          description: Importing has been started\r\n        '400':\r\n          description: Failed to import dataset\r\n        '405':\r\n          description: Format is not available\r\n  /api/projects/{id}/preview:\r\n    get:\r\n      operationId: projects_retrieve_preview\r\n      summary: Method returns a preview image for the project\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this project.\r\n        required: true\r\n      tags:\r\n      - projects\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: Project image preview\r\n        '404':\r\n          description: Project image preview not found\r\n  /api/projects/backup/:\r\n    post:\r\n      operationId: projects_create_backup\r\n      description: |2\r\n\r\n        The backup import process is as follows:\r\n\r\n        The first request POST /api/projects/backup will initiate file upload and will create\r\n        the rq job on the server in which the process of a project creating from an uploaded backup\r\n        will be carried out.\r\n\r\n        After initiating the backup upload, you will receive an rq_id parameter.\r\n        Make sure to include this parameter as a query parameter in your subsequent requests\r\n        to track the status of the project creation.\r\n        Once the project has been successfully created, the server will return the id of the newly created project.\r\n      summary: Methods create a project from a backup\r\n      parameters:\r\n      - in: header\r\n        name: X-Organization\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Backup file name\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n          default: local\r\n        description: Where to import the backup file from\r\n      - in: query\r\n        name: org\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Organization identifier\r\n      - in: query\r\n        name: rq_id\r\n        schema:\r\n          type: string\r\n        description: rq id\r\n      tags:\r\n      - projects\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/BackupWriteRequest'\r\n          multipart/form-data:\r\n            schema:\r\n              $ref: '#/components/schemas/BackupWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          description: The project has been imported\r\n        '202':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/RqId'\r\n          description: Importing a backup file has been started\r\n  /api/quality/conflicts:\r\n    get:\r\n      operationId: quality_list_conflicts\r\n      summary: Method returns a paginated list of annotation conflicts\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''id'', ''frame'',\r\n          ''type'', ''job_id'', ''task_id'', ''severity'']'\r\n        schema:\r\n          type: string\r\n      - name: frame\r\n        in: query\r\n        description: A simple equality filter for the frame field\r\n        schema:\r\n          type: integer\r\n      - name: job_id\r\n        in: query\r\n        description: A simple equality filter for the job_id field\r\n        schema:\r\n          type: integer\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - in: query\r\n        name: report_id\r\n        schema:\r\n          type: integer\r\n        description: A simple equality filter for report id\r\n      - name: severity\r\n        in: query\r\n        description: A simple equality filter for the severity field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - warning\r\n          - error\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''id'', ''frame'', ''type'', ''job_id'', ''task_id'', ''severity'']'\r\n        schema:\r\n          type: string\r\n      - name: task_id\r\n        in: query\r\n        description: A simple equality filter for the task_id field\r\n        schema:\r\n          type: integer\r\n      - name: type\r\n        in: query\r\n        description: A simple equality filter for the type field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - missing_annotation\r\n          - extra_annotation\r\n          - mismatching_label\r\n          - low_overlap\r\n          - mismatching_direction\r\n          - mismatching_attributes\r\n          - mismatching_groups\r\n          - covered_annotation\r\n      tags:\r\n      - quality\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedAnnotationConflictList'\r\n          description: ''\r\n  /api/quality/reports:\r\n    get:\r\n      operationId: quality_list_reports\r\n      summary: Method returns a paginated list of quality reports\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''id'', ''job_id'',\r\n          ''created_date'', ''gt_last_updated'', ''target_last_updated'', ''parent_id'']'\r\n        schema:\r\n          type: string\r\n      - name: job_id\r\n        in: query\r\n        description: A simple equality filter for the job_id field\r\n        schema:\r\n          type: integer\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: parent_id\r\n        in: query\r\n        description: A simple equality filter for the parent_id field\r\n        schema:\r\n          type: integer\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''id'', ''job_id'', ''created_date'', ''gt_last_updated'', ''target_last_updated'',\r\n          ''parent_id'']'\r\n        schema:\r\n          type: string\r\n      - in: query\r\n        name: target\r\n        schema:\r\n          type: string\r\n        description: A simple equality filter for target\r\n      - in: query\r\n        name: task_id\r\n        schema:\r\n          type: integer\r\n        description: A simple equality filter for task id\r\n      tags:\r\n      - quality\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedQualityReportList'\r\n          description: ''\r\n    post:\r\n      operationId: quality_create_report\r\n      summary: Creates a quality report asynchronously and allows to check request\r\n        status\r\n      parameters:\r\n      - in: query\r\n        name: rq_id\r\n        schema:\r\n          type: string\r\n        description: |\r\n          The report creation request id. Can be specified to check the report\r\n          creation status.\r\n      tags:\r\n      - quality\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/QualityReportCreateRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/QualityReport'\r\n          description: ''\r\n        '202':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/RqId'\r\n          description: |\r\n            A quality report request has been enqueued, the request id is returned.\r\n            The request status can be checked at this endpoint by passing the rq_id\r\n            as the query parameter. If the request id is specified, this response\r\n            means the quality report request is queued or is being processed.\r\n        '400':\r\n          description: Invalid or failed request, check the response data for details\r\n  /api/quality/reports/{id}:\r\n    get:\r\n      operationId: quality_retrieve_report\r\n      summary: Method returns details of a quality report\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this quality report.\r\n        required: true\r\n      tags:\r\n      - quality\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/QualityReport'\r\n          description: ''\r\n  /api/quality/reports/{id}/data:\r\n    get:\r\n      operationId: quality_retrieve_report_data\r\n      summary: Retrieve full contents of the report in JSON format\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this quality report.\r\n        required: true\r\n      tags:\r\n      - quality\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: object\r\n                additionalProperties: {}\r\n          description: ''\r\n  /api/quality/settings:\r\n    get:\r\n      operationId: quality_list_settings\r\n      summary: Method returns a paginated list of quality settings instances\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''id'', ''task_id'']'\r\n        schema:\r\n          type: string\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''id'']'\r\n        schema:\r\n          type: string\r\n      - name: task_id\r\n        in: query\r\n        description: A simple equality filter for the task_id field\r\n        schema:\r\n          type: integer\r\n      tags:\r\n      - quality\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedQualitySettingsList'\r\n          description: ''\r\n  /api/quality/settings/{id}:\r\n    get:\r\n      operationId: quality_retrieve_settings\r\n      summary: Method returns details of the quality settings instance\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: An id of a quality settings instance\r\n        required: true\r\n      tags:\r\n      - quality\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/QualitySettings'\r\n          description: ''\r\n    patch:\r\n      operationId: quality_partial_update_settings\r\n      summary: Methods does a partial update of chosen fields in the quality settings\r\n        instance\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: An id of a quality settings instance\r\n        required: true\r\n      tags:\r\n      - quality\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedQualitySettingsRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/QualitySettings'\r\n          description: ''\r\n  /api/schema/:\r\n    get:\r\n      operationId: schema_retrieve\r\n      description: |-\r\n        OpenApi3 schema for this API. Format can be selected via content negotiation.\r\n\r\n        - YAML: application/vnd.oai.openapi\r\n        - JSON: application/vnd.oai.openapi+json\r\n      parameters:\r\n      - in: query\r\n        name: lang\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - af\r\n          - ar\r\n          - ar-dz\r\n          - ast\r\n          - az\r\n          - be\r\n          - bg\r\n          - bn\r\n          - br\r\n          - bs\r\n          - ca\r\n          - ckb\r\n          - cs\r\n          - cy\r\n          - da\r\n          - de\r\n          - dsb\r\n          - el\r\n          - en\r\n          - en-au\r\n          - en-gb\r\n          - eo\r\n          - es\r\n          - es-ar\r\n          - es-co\r\n          - es-mx\r\n          - es-ni\r\n          - es-ve\r\n          - et\r\n          - eu\r\n          - fa\r\n          - fi\r\n          - fr\r\n          - fy\r\n          - ga\r\n          - gd\r\n          - gl\r\n          - he\r\n          - hi\r\n          - hr\r\n          - hsb\r\n          - hu\r\n          - hy\r\n          - ia\r\n          - id\r\n          - ig\r\n          - io\r\n          - is\r\n          - it\r\n          - ja\r\n          - ka\r\n          - kab\r\n          - kk\r\n          - km\r\n          - kn\r\n          - ko\r\n          - ky\r\n          - lb\r\n          - lt\r\n          - lv\r\n          - mk\r\n          - ml\r\n          - mn\r\n          - mr\r\n          - ms\r\n          - my\r\n          - nb\r\n          - ne\r\n          - nl\r\n          - nn\r\n          - os\r\n          - pa\r\n          - pl\r\n          - pt\r\n          - pt-br\r\n          - ro\r\n          - ru\r\n          - sk\r\n          - sl\r\n          - sq\r\n          - sr\r\n          - sr-latn\r\n          - sv\r\n          - sw\r\n          - ta\r\n          - te\r\n          - tg\r\n          - th\r\n          - tk\r\n          - tr\r\n          - tt\r\n          - udm\r\n          - uk\r\n          - ur\r\n          - uz\r\n          - vi\r\n          - zh-hans\r\n          - zh-hant\r\n      - in: query\r\n        name: scheme\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - json\r\n          - yaml\r\n      tags:\r\n      - schema\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.oai.openapi:\r\n              schema:\r\n                type: object\r\n                additionalProperties: {}\r\n            application/yaml:\r\n              schema:\r\n                type: object\r\n                additionalProperties: {}\r\n            application/vnd.oai.openapi+json:\r\n              schema:\r\n                type: object\r\n                additionalProperties: {}\r\n            application/json:\r\n              schema:\r\n                type: object\r\n                additionalProperties: {}\r\n          description: ''\r\n  /api/server/about:\r\n    get:\r\n      operationId: server_retrieve_about\r\n      summary: Method provides basic CVAT information\r\n      tags:\r\n      - server\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/About'\r\n          description: ''\r\n  /api/server/annotation/formats:\r\n    get:\r\n      operationId: server_retrieve_annotation_formats\r\n      summary: Method provides the list of supported annotations formats\r\n      tags:\r\n      - server\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/DatasetFormats'\r\n          description: ''\r\n  /api/server/plugins:\r\n    get:\r\n      operationId: server_retrieve_plugins\r\n      summary: Method provides allowed plugins\r\n      tags:\r\n      - server\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Plugins'\r\n          description: ''\r\n  /api/server/share:\r\n    get:\r\n      operationId: server_list_share\r\n      summary: Returns all files and folders that are on the server along specified\r\n        path\r\n      parameters:\r\n      - in: query\r\n        name: directory\r\n        schema:\r\n          type: string\r\n        description: Directory to browse\r\n      tags:\r\n      - server\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: array\r\n                items:\r\n                  $ref: '#/components/schemas/FileInfo'\r\n          description: ''\r\n  /api/tasks:\r\n    get:\r\n      operationId: tasks_list\r\n      summary: Returns a paginated list of tasks\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: assignee\r\n        in: query\r\n        description: A simple equality filter for the assignee field\r\n        schema:\r\n          type: string\r\n      - name: dimension\r\n        in: query\r\n        description: A simple equality filter for the dimension field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - 3d\r\n          - 2d\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''project_name'', ''name'',\r\n          ''owner'', ''status'', ''assignee'', ''subset'', ''mode'', ''dimension'',\r\n          ''tracker_link'', ''id'', ''project_id'', ''updated_date'']'\r\n        schema:\r\n          type: string\r\n      - name: mode\r\n        in: query\r\n        description: A simple equality filter for the mode field\r\n        schema:\r\n          type: string\r\n      - name: name\r\n        in: query\r\n        description: A simple equality filter for the name field\r\n        schema:\r\n          type: string\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: owner\r\n        in: query\r\n        description: A simple equality filter for the owner field\r\n        schema:\r\n          type: string\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: project_id\r\n        in: query\r\n        description: A simple equality filter for the project_id field\r\n        schema:\r\n          type: integer\r\n      - name: project_name\r\n        in: query\r\n        description: A simple equality filter for the project_name field\r\n        schema:\r\n          type: string\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''project_name'', ''name'',\r\n          ''owner'', ''status'', ''assignee'', ''subset'', ''mode'', ''dimension'',\r\n          ''tracker_link'')'\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''project_name'', ''name'', ''owner'', ''status'', ''assignee'', ''subset'',\r\n          ''mode'', ''dimension'', ''tracker_link'', ''id'', ''project_id'', ''updated_date'']'\r\n        schema:\r\n          type: string\r\n      - name: status\r\n        in: query\r\n        description: A simple equality filter for the status field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - annotation\r\n          - validation\r\n          - completed\r\n      - name: subset\r\n        in: query\r\n        description: A simple equality filter for the subset field\r\n        schema:\r\n          type: string\r\n      - name: tracker_link\r\n        in: query\r\n        description: A simple equality filter for the tracker_link field\r\n        schema:\r\n          type: string\r\n      tags:\r\n      - tasks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedTaskReadList'\r\n          description: ''\r\n    post:\r\n      operationId: tasks_create\r\n      summary: Method creates a new task in a database without any attached images\r\n        and videos\r\n      parameters:\r\n      - in: header\r\n        name: X-Organization\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Organization identifier\r\n      tags:\r\n      - tasks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/TaskWriteRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/TaskRead'\r\n          description: ''\r\n  /api/tasks/{id}:\r\n    get:\r\n      operationId: tasks_retrieve\r\n      summary: Method returns details of a specific task\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      tags:\r\n      - tasks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/TaskRead'\r\n          description: ''\r\n    patch:\r\n      operationId: tasks_partial_update\r\n      summary: Methods does a partial update of chosen fields in a task\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      tags:\r\n      - tasks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedTaskWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/TaskRead'\r\n          description: ''\r\n    delete:\r\n      operationId: tasks_destroy\r\n      summary: Method deletes a specific task, all attached jobs, annotations, and\r\n        data\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      tags:\r\n      - tasks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The task has been deleted\r\n  /api/tasks/{id}/annotations/:\r\n    get:\r\n      operationId: tasks_retrieve_annotations\r\n      summary: Method allows to download task annotations\r\n      parameters:\r\n      - in: query\r\n        name: action\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - download\r\n        description: Used to start downloading process after annotation file had been\r\n          created\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Desired output file name\r\n      - in: query\r\n        name: format\r\n        schema:\r\n          type: string\r\n        description: |-\r\n          Desired output format name\r\n          You can get the list of supported formats at:\r\n          /server/annotation/formats\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n        description: Where need to save downloaded dataset\r\n      - in: query\r\n        name: use_default_location\r\n        schema:\r\n          type: boolean\r\n          default: true\r\n        description: Use the location that was configured in the task to export annotation\r\n      tags:\r\n      - tasks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/AnnotationsRead'\r\n          description: Download of file started\r\n        '201':\r\n          description: Annotations file is ready to download\r\n        '202':\r\n          description: Dump of annotations has been started\r\n        '400':\r\n          description: Exporting without data is not allowed\r\n        '405':\r\n          description: Format is not available\r\n    post:\r\n      operationId: tasks_create_annotations\r\n      description: |2\r\n\r\n        The request POST /api/tasks/id/annotations will initiate file upload and will create\r\n        the rq job on the server in which the process of annotations uploading from file\r\n        will be carried out. Please, use the PUT /api/tasks/id/annotations endpoint for checking status of the process.\r\n      summary: Method allows to initialize the  process of upload task annotations\r\n        from a local or a cloud storage file\r\n      parameters:\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Annotation file name\r\n      - in: query\r\n        name: format\r\n        schema:\r\n          type: string\r\n        description: |-\r\n          Input format name\r\n          You can get the list of supported formats at:\r\n          /server/annotation/formats\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n        description: where to import the annotation from\r\n      - in: query\r\n        name: use_default_location\r\n        schema:\r\n          type: boolean\r\n          default: true\r\n        description: Use the location that was configured in task to import annotations\r\n      tags:\r\n      - tasks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/TaskAnnotationsWriteRequest'\r\n          multipart/form-data:\r\n            schema:\r\n              $ref: '#/components/schemas/TaskAnnotationsWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          description: Uploading has finished\r\n        '202':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/RqId'\r\n          description: Uploading has been started\r\n        '405':\r\n          description: Format is not available\r\n    put:\r\n      operationId: tasks_update_annotations\r\n      description: |2\r\n\r\n        To check the status of the process of uploading a task annotations from a file:\r\n\r\n        After initiating the annotations upload, you will receive an rq_id parameter.\r\n        Make sure to include this parameter as a query parameter in your subsequent\r\n        PUT /api/tasks/id/annotations requests to track the status of the annotations upload.\r\n      summary: Method allows to upload task annotations or edit existing annotations\r\n      parameters:\r\n      - in: query\r\n        name: format\r\n        schema:\r\n          type: string\r\n        description: |-\r\n          Input format name\r\n          You can get the list of supported formats at:\r\n          /server/annotation/formats\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      - in: query\r\n        name: rq_id\r\n        schema:\r\n          type: string\r\n        description: rq id\r\n      tags:\r\n      - tasks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/TaskAnnotationsUpdateRequest'\r\n          multipart/form-data:\r\n            schema:\r\n              $ref: '#/components/schemas/TaskAnnotationsUpdateRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          description: Uploading has finished\r\n        '202':\r\n          description: Uploading has been started\r\n        '405':\r\n          description: Format is not available\r\n    patch:\r\n      operationId: tasks_partial_update_annotations\r\n      summary: Method performs a partial update of annotations in a specific task\r\n      parameters:\r\n      - in: query\r\n        name: action\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - create\r\n          - delete\r\n          - update\r\n        required: true\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      tags:\r\n      - tasks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedLabeledDataRequest'\r\n          multipart/form-data:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedLabeledDataRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/LabeledData'\r\n          description: ''\r\n    delete:\r\n      operationId: tasks_destroy_annotations\r\n      summary: Method deletes all annotations for a specific task\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      tags:\r\n      - tasks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The annotation has been deleted\r\n  /api/tasks/{id}/backup:\r\n    get:\r\n      operationId: tasks_retrieve_backup\r\n      summary: Method backup a specified task\r\n      parameters:\r\n      - in: query\r\n        name: action\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - download\r\n        description: Used to start downloading process after backup file had been\r\n          created\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Backup file name\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n        description: Where need to save downloaded backup\r\n      - in: query\r\n        name: use_default_location\r\n        schema:\r\n          type: boolean\r\n          default: true\r\n        description: Use the location that was configured in the task to export backup\r\n      tags:\r\n      - tasks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: Download of file started\r\n        '201':\r\n          description: Output backup file is ready for downloading\r\n        '202':\r\n          description: Creating a backup file has been started\r\n  /api/tasks/{id}/data/:\r\n    get:\r\n      operationId: tasks_retrieve_data\r\n      summary: Method returns data for a specific task\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      - in: query\r\n        name: number\r\n        schema:\r\n          type: integer\r\n        description: A unique number value identifying chunk or frame\r\n      - in: query\r\n        name: quality\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - compressed\r\n          - original\r\n        description: Specifies the quality level of the requested data\r\n      - in: query\r\n        name: type\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - chunk\r\n          - context_image\r\n          - frame\r\n        description: Specifies the type of the requested data\r\n      tags:\r\n      - tasks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: Data of a specific type\r\n    post:\r\n      operationId: tasks_create_data\r\n      description: |\r\n        Allows to upload data to a task.\r\n        Supports the TUS open file uploading protocol (https://tus.io/).\r\n\r\n        Supports the following protocols:\r\n\r\n        1. A single Data request\r\n\r\n        and\r\n\r\n        2.1. An Upload-Start request\r\n        2.2.a. Regular TUS protocol requests (Upload-Length + Chunks)\r\n        2.2.b. Upload-Multiple requests\r\n        2.3. An Upload-Finish request\r\n\r\n        Requests:\r\n        - Data - POST, no extra headers or 'Upload-Start' + 'Upload-Finish' headers.\r\n          Contains data in the body.\r\n        - Upload-Start - POST, has an 'Upload-Start' header. No body is expected.\r\n        - Upload-Length - POST, has an 'Upload-Length' header (see the TUS specification)\r\n        - Chunk - HEAD/PATCH (see the TUS specification). Sent to /data/<file id> endpoints.\r\n        - Upload-Finish - POST, has an 'Upload-Finish' header. Can contain data in the body.\r\n        - Upload-Multiple - POST, has an 'Upload-Multiple' header. Contains data in the body.\r\n\r\n        The 'Upload-Finish' request allows to specify the uploaded files should be ordered.\r\n        This may be needed if the files can be sent unordered. To state that the input files\r\n        are sent ordered, pass an empty list of files in the 'upload_file_order' field.\r\n        If the files are sent unordered, the ordered file list is expected\r\n        in the 'upload_file_order' field. It must be a list of string file paths,\r\n        relative to the dataset root.\r\n\r\n        Example:\r\n        files = [\r\n            \"cats/cat_1.jpg\",\r\n            \"dogs/dog2.jpg\",\r\n            \"image_3.png\",\r\n            ...\r\n        ]\r\n\r\n        Independently of the file declaration field used\r\n        ('client_files', 'server_files', etc.), when the 'predefined'\r\n        sorting method is selected, the uploaded files will be ordered according\r\n        to the '.jsonl' manifest file, if it is found in the list of files.\r\n        For archives (e.g. '.zip'), a manifest file ('*.jsonl') is required when using\r\n        the 'predefined' file ordering. Such file must be provided next to the archive\r\n        in the list of files. Read more about manifest files here:\r\n        https://opencv.github.io/cvat/docs/manual/advanced/dataset_manifest/\r\n\r\n        After all data is sent, the operation status can be retrieved via\r\n        the /status endpoint.\r\n      summary: Method permanently attaches data (images, video, etc.) to a task\r\n      parameters:\r\n      - in: header\r\n        name: Upload-Finish\r\n        schema:\r\n          type: boolean\r\n        description: Finishes data upload. Can be combined with Upload-Start header\r\n          to create task data with one request\r\n      - in: header\r\n        name: Upload-Multiple\r\n        schema:\r\n          type: boolean\r\n        description: Indicates that data with this request are single or multiple\r\n          files that should be attached to a task\r\n      - in: header\r\n        name: Upload-Start\r\n        schema:\r\n          type: boolean\r\n        description: Initializes data upload. Optionally, can include upload metadata\r\n          in the request body.\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      tags:\r\n      - tasks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/DataRequest'\r\n          multipart/form-data:\r\n            schema:\r\n              $ref: '#/components/schemas/DataRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '202':\r\n          description: No response body\r\n  /api/tasks/{id}/data/meta:\r\n    get:\r\n      operationId: tasks_retrieve_data_meta\r\n      summary: Method provides a meta information about media files which are related\r\n        with the task\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      tags:\r\n      - tasks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/DataMetaRead'\r\n          description: ''\r\n    patch:\r\n      operationId: tasks_partial_update_data_meta\r\n      summary: Method provides a meta information about media files which are related\r\n        with the task\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      tags:\r\n      - tasks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedDataMetaWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/DataMetaRead'\r\n          description: ''\r\n  /api/tasks/{id}/dataset:\r\n    get:\r\n      operationId: tasks_retrieve_dataset\r\n      summary: Export task as a dataset in a specific format\r\n      parameters:\r\n      - in: query\r\n        name: action\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - download\r\n        description: Used to start downloading process after annotation file had been\r\n          created\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Desired output file name\r\n      - in: query\r\n        name: format\r\n        schema:\r\n          type: string\r\n        description: |-\r\n          Desired output format name\r\n          You can get the list of supported formats at:\r\n          /server/annotation/formats\r\n        required: true\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n        description: Where need to save downloaded dataset\r\n      - in: query\r\n        name: use_default_location\r\n        schema:\r\n          type: boolean\r\n          default: true\r\n        description: Use the location that was configured in task to export annotations\r\n      tags:\r\n      - tasks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                type: string\r\n                format: binary\r\n          description: Download of file started\r\n        '201':\r\n          description: Output file is ready for downloading\r\n        '202':\r\n          description: Exporting has been started\r\n        '400':\r\n          description: Exporting without data is not allowed\r\n        '405':\r\n          description: Format is not available\r\n  /api/tasks/{id}/preview:\r\n    get:\r\n      operationId: tasks_retrieve_preview\r\n      summary: Method returns a preview image for the task\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      tags:\r\n      - tasks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: Task image preview\r\n        '404':\r\n          description: Task image preview not found\r\n  /api/tasks/{id}/status:\r\n    get:\r\n      operationId: tasks_retrieve_status\r\n      summary: When task is being created the method returns information about a status\r\n        of the creation process\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this task.\r\n        required: true\r\n      tags:\r\n      - tasks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/RqStatus'\r\n          description: ''\r\n  /api/tasks/backup/:\r\n    post:\r\n      operationId: tasks_create_backup\r\n      description: |2\r\n\r\n        The backup import process is as follows:\r\n\r\n        The first request POST /api/tasks/backup will initiate file upload and will create\r\n        the rq job on the server in which the process of a task creating from an uploaded backup\r\n        will be carried out.\r\n\r\n        After initiating the backup upload, you will receive an rq_id parameter.\r\n        Make sure to include this parameter as a query parameter in your subsequent requests\r\n        to track the status of the task creation.\r\n        Once the task has been successfully created, the server will return the id of the newly created task.\r\n      summary: Method recreates a task from an attached task backup file\r\n      parameters:\r\n      - in: header\r\n        name: X-Organization\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: cloud_storage_id\r\n        schema:\r\n          type: number\r\n        description: Storage id\r\n      - in: query\r\n        name: filename\r\n        schema:\r\n          type: string\r\n        description: Backup file name\r\n      - in: query\r\n        name: location\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - cloud_storage\r\n          - local\r\n          default: local\r\n        description: Where to import the backup file from\r\n      - in: query\r\n        name: org\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Organization identifier\r\n      - in: query\r\n        name: rq_id\r\n        schema:\r\n          type: string\r\n        description: rq id\r\n      tags:\r\n      - tasks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/TaskFileRequest'\r\n          multipart/form-data:\r\n            schema:\r\n              $ref: '#/components/schemas/TaskFileRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          description: The task has been imported\r\n        '202':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/RqId'\r\n          description: Importing a backup file has been started\r\n  /api/usage:\r\n    get:\r\n      operationId: usage_list\r\n      summary: Method returns a paginated list of usage according to query parameters\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''user_id'', ''user'']'\r\n        schema:\r\n          type: string\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''user_id'', ''user'']'\r\n        schema:\r\n          type: string\r\n      - name: user\r\n        in: query\r\n        description: A simple equality filter for the user field\r\n        schema:\r\n          type: string\r\n      - name: user_id\r\n        in: query\r\n        description: A simple equality filter for the user_id field\r\n        schema:\r\n          type: integer\r\n      tags:\r\n      - usage\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedUsageList'\r\n          description: ''\r\n  /api/user-agreements:\r\n    get:\r\n      operationId: user_agreements_retrieve\r\n      summary: Method provides user agreements that the user must accept to register\r\n      tags:\r\n      - subscriptions\r\n      security:\r\n      - {}\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/UserAgreement'\r\n          description: ''\r\n  /api/users:\r\n    get:\r\n      operationId: users_list\r\n      summary: Method returns a paginated list of users\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''username'', ''first_name'',\r\n          ''last_name'', ''id'', ''is_active'']'\r\n        schema:\r\n          type: string\r\n      - name: first_name\r\n        in: query\r\n        description: A simple equality filter for the first_name field\r\n        schema:\r\n          type: string\r\n      - name: is_active\r\n        in: query\r\n        description: A simple equality filter for the is_active field\r\n        schema:\r\n          type: boolean\r\n      - name: last_name\r\n        in: query\r\n        description: A simple equality filter for the last_name field\r\n        schema:\r\n          type: string\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''username'', ''first_name'',\r\n          ''last_name'')'\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''username'', ''first_name'', ''last_name'', ''id'', ''is_active'']'\r\n        schema:\r\n          type: string\r\n      - name: username\r\n        in: query\r\n        description: A simple equality filter for the username field\r\n        schema:\r\n          type: string\r\n      tags:\r\n      - users\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedMetaUserList'\r\n          description: ''\r\n  /api/users/{id}:\r\n    get:\r\n      operationId: users_retrieve\r\n      summary: Method provides information of a specific user\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this user.\r\n        required: true\r\n      tags:\r\n      - users\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/MetaUser'\r\n          description: ''\r\n    patch:\r\n      operationId: users_partial_update\r\n      summary: Method updates chosen fields of a user\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this user.\r\n        required: true\r\n      tags:\r\n      - users\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedUserRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/MetaUser'\r\n          description: ''\r\n    delete:\r\n      operationId: users_destroy\r\n      summary: Method deletes a specific user from the server\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this user.\r\n        required: true\r\n      tags:\r\n      - users\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The user has been deleted\r\n  /api/users/self:\r\n    get:\r\n      operationId: users_retrieve_self\r\n      description: Method returns an instance of a user who is currently authorized\r\n      summary: Method returns an instance of a user who is currently authorized\r\n      tags:\r\n      - users\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/MetaUser'\r\n          description: ''\r\n  /api/webhooks:\r\n    get:\r\n      operationId: webhooks_list\r\n      summary: Method returns a paginated list of webhook according to query parameters\r\n      parameters:\r\n      - name: X-Organization\r\n        in: header\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: filter\r\n        required: false\r\n        in: query\r\n        description: 'A filter term. Available filter_fields: [''target_url'', ''owner'',\r\n          ''type'', ''description'', ''id'', ''project_id'', ''updated_date'']'\r\n        schema:\r\n          type: string\r\n      - name: org\r\n        in: query\r\n        description: Organization unique slug\r\n        schema:\r\n          type: string\r\n      - name: org_id\r\n        in: query\r\n        description: Organization identifier\r\n        schema:\r\n          type: integer\r\n      - name: owner\r\n        in: query\r\n        description: A simple equality filter for the owner field\r\n        schema:\r\n          type: string\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      - name: project_id\r\n        in: query\r\n        description: A simple equality filter for the project_id field\r\n        schema:\r\n          type: integer\r\n      - name: search\r\n        required: false\r\n        in: query\r\n        description: 'A search term. Available search_fields: (''target_url'', ''owner'',\r\n          ''type'', ''description'')'\r\n        schema:\r\n          type: string\r\n      - name: sort\r\n        required: false\r\n        in: query\r\n        description: 'Which field to use when ordering the results. Available ordering_fields:\r\n          [''target_url'', ''owner'', ''type'', ''description'', ''id'', ''project_id'',\r\n          ''updated_date'']'\r\n        schema:\r\n          type: string\r\n      - name: target_url\r\n        in: query\r\n        description: A simple equality filter for the target_url field\r\n        schema:\r\n          type: string\r\n      - name: type\r\n        in: query\r\n        description: A simple equality filter for the type field\r\n        schema:\r\n          type: string\r\n          enum:\r\n          - organization\r\n          - project\r\n      tags:\r\n      - webhooks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedWebhookReadList'\r\n          description: ''\r\n    post:\r\n      operationId: webhooks_create\r\n      summary: Method creates a webhook\r\n      parameters:\r\n      - in: header\r\n        name: X-Organization\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org\r\n        schema:\r\n          type: string\r\n        description: Organization unique slug\r\n      - in: query\r\n        name: org_id\r\n        schema:\r\n          type: integer\r\n        description: Organization identifier\r\n      tags:\r\n      - webhooks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/WebhookWriteRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '201':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/WebhookRead'\r\n          description: ''\r\n  /api/webhooks/{id}:\r\n    get:\r\n      operationId: webhooks_retrieve\r\n      summary: Method returns details of a webhook\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this webhook.\r\n        required: true\r\n      tags:\r\n      - webhooks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/WebhookRead'\r\n          description: ''\r\n    put:\r\n      operationId: webhooks_update\r\n      summary: Method updates a webhook by id\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this webhook.\r\n        required: true\r\n      tags:\r\n      - webhooks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/WebhookWriteRequest'\r\n        required: true\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/WebhookRead'\r\n          description: ''\r\n    patch:\r\n      operationId: webhooks_partial_update\r\n      summary: Methods does a partial update of chosen fields in a webhook\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this webhook.\r\n        required: true\r\n      tags:\r\n      - webhooks\r\n      requestBody:\r\n        content:\r\n          application/json:\r\n            schema:\r\n              $ref: '#/components/schemas/PatchedWebhookWriteRequest'\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/WebhookRead'\r\n          description: ''\r\n    delete:\r\n      operationId: webhooks_destroy\r\n      summary: Method deletes a webhook\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this webhook.\r\n        required: true\r\n      tags:\r\n      - webhooks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '204':\r\n          description: The webhook has been deleted\r\n  /api/webhooks/{id}/deliveries:\r\n    get:\r\n      operationId: webhooks_list_deliveries\r\n      summary: Method return a list of deliveries for a specific webhook\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this webhook.\r\n        required: true\r\n      - name: page\r\n        required: false\r\n        in: query\r\n        description: A page number within the paginated result set.\r\n        schema:\r\n          type: integer\r\n      - name: page_size\r\n        required: false\r\n        in: query\r\n        description: Number of results to return per page.\r\n        schema:\r\n          type: integer\r\n      tags:\r\n      - webhooks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/PaginatedWebhookDeliveryReadList'\r\n          description: ''\r\n  /api/webhooks/{id}/deliveries/{delivery_id}:\r\n    get:\r\n      operationId: webhooks_retrieve_deliveries\r\n      summary: Method return a specific delivery for a specific webhook\r\n      parameters:\r\n      - in: path\r\n        name: delivery_id\r\n        schema:\r\n          type: string\r\n          pattern: ^\\d+$\r\n        required: true\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this webhook.\r\n        required: true\r\n      tags:\r\n      - webhooks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/WebhookDeliveryRead'\r\n          description: ''\r\n  /api/webhooks/{id}/deliveries/{delivery_id}/redelivery:\r\n    post:\r\n      operationId: webhooks_create_deliveries_redelivery\r\n      summary: Method redeliver a specific webhook delivery\r\n      parameters:\r\n      - in: path\r\n        name: delivery_id\r\n        schema:\r\n          type: string\r\n          pattern: ^\\d+$\r\n        required: true\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this webhook.\r\n        required: true\r\n      tags:\r\n      - webhooks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          description: No response body\r\n  /api/webhooks/{id}/ping:\r\n    post:\r\n      operationId: webhooks_create_ping\r\n      summary: Method send ping webhook\r\n      parameters:\r\n      - in: path\r\n        name: id\r\n        schema:\r\n          type: integer\r\n        description: A unique integer value identifying this webhook.\r\n        required: true\r\n      tags:\r\n      - webhooks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/WebhookDeliveryRead'\r\n          description: ''\r\n  /api/webhooks/events:\r\n    get:\r\n      operationId: webhooks_retrieve_events\r\n      summary: Method return a list of available webhook events\r\n      parameters:\r\n      - in: query\r\n        name: type\r\n        schema:\r\n          type: string\r\n        description: Type of webhook\r\n      tags:\r\n      - webhooks\r\n      security:\r\n      - sessionAuth: []\r\n        csrfAuth: []\r\n        tokenAuth: []\r\n      - signatureAuth: []\r\n      - basicAuth: []\r\n      responses:\r\n        '200':\r\n          content:\r\n            application/vnd.cvat+json:\r\n              schema:\r\n                $ref: '#/components/schemas/Events'\r\n          description: ''\r\ncomponents:\r\n  schemas:\r\n    About:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          maxLength: 128\r\n        description:\r\n          type: string\r\n          maxLength: 2048\r\n        version:\r\n          type: string\r\n          maxLength: 64\r\n      required:\r\n      - description\r\n      - name\r\n      - version\r\n    AnnotationConflict:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        frame:\r\n          type: integer\r\n          readOnly: true\r\n        type:\r\n          allOf:\r\n          - $ref: '#/components/schemas/AnnotationConflictTypeEnum'\r\n          readOnly: true\r\n        annotation_ids:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AnnotationId'\r\n        report_id:\r\n          type: integer\r\n          readOnly: true\r\n        severity:\r\n          allOf:\r\n          - $ref: '#/components/schemas/SeverityEnum'\r\n          readOnly: true\r\n      required:\r\n      - annotation_ids\r\n    AnnotationConflictTypeEnum:\r\n      enum:\r\n      - missing_annotation\r\n      - extra_annotation\r\n      - mismatching_label\r\n      - low_overlap\r\n      - mismatching_direction\r\n      - mismatching_attributes\r\n      - mismatching_groups\r\n      - covered_annotation\r\n      type: string\r\n      description: |-\r\n        * `missing_annotation` - MISSING_ANNOTATION\r\n        * `extra_annotation` - EXTRA_ANNOTATION\r\n        * `mismatching_label` - MISMATCHING_LABEL\r\n        * `low_overlap` - LOW_OVERLAP\r\n        * `mismatching_direction` - MISMATCHING_DIRECTION\r\n        * `mismatching_attributes` - MISMATCHING_ATTRIBUTES\r\n        * `mismatching_groups` - MISMATCHING_GROUPS\r\n        * `covered_annotation` - COVERED_ANNOTATION\r\n    AnnotationFileRequest:\r\n      type: object\r\n      properties:\r\n        annotation_file:\r\n          type: string\r\n          format: binary\r\n      required:\r\n      - annotation_file\r\n    AnnotationGuideRead:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        task_id:\r\n          type: integer\r\n          nullable: true\r\n          readOnly: true\r\n        project_id:\r\n          type: integer\r\n          nullable: true\r\n          readOnly: true\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        updated_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        markdown:\r\n          type: string\r\n          readOnly: true\r\n    AnnotationGuideWriteRequest:\r\n      type: object\r\n      properties:\r\n        task_id:\r\n          type: integer\r\n          nullable: true\r\n        project_id:\r\n          type: integer\r\n          nullable: true\r\n        markdown:\r\n          type: string\r\n    AnnotationId:\r\n      type: object\r\n      properties:\r\n        obj_id:\r\n          type: integer\r\n          readOnly: true\r\n        job_id:\r\n          type: integer\r\n          readOnly: true\r\n        type:\r\n          allOf:\r\n          - $ref: '#/components/schemas/AnnotationIdTypeEnum'\r\n          readOnly: true\r\n        shape_type:\r\n          readOnly: true\r\n          nullable: true\r\n          oneOf:\r\n          - $ref: '#/components/schemas/ShapeType'\r\n          - $ref: '#/components/schemas/NullEnum'\r\n    AnnotationIdTypeEnum:\r\n      enum:\r\n      - tag\r\n      - shape\r\n      - track\r\n      type: string\r\n      description: |-\r\n        * `tag` - TAG\r\n        * `shape` - SHAPE\r\n        * `track` - TRACK\r\n    AnnotationsRead:\r\n      oneOf:\r\n      - $ref: '#/components/schemas/LabeledData'\r\n      - type: string\r\n        format: binary\r\n    AssetRead:\r\n      type: object\r\n      properties:\r\n        uuid:\r\n          type: string\r\n          format: uuid\r\n          readOnly: true\r\n        filename:\r\n          type: string\r\n          maxLength: 1024\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        owner:\r\n          $ref: '#/components/schemas/BasicUser'\r\n        guide_id:\r\n          type: integer\r\n          readOnly: true\r\n      required:\r\n      - filename\r\n    Attribute:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        name:\r\n          type: string\r\n          maxLength: 64\r\n        mutable:\r\n          type: boolean\r\n        input_type:\r\n          $ref: '#/components/schemas/InputTypeEnum'\r\n        default_value:\r\n          type: string\r\n          maxLength: 128\r\n        values:\r\n          type: array\r\n          items:\r\n            type: string\r\n            maxLength: 200\r\n      required:\r\n      - default_value\r\n      - input_type\r\n      - mutable\r\n      - name\r\n      - values\r\n    AttributeRequest:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 64\r\n        mutable:\r\n          type: boolean\r\n        input_type:\r\n          $ref: '#/components/schemas/InputTypeEnum'\r\n        default_value:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 128\r\n        values:\r\n          type: array\r\n          items:\r\n            type: string\r\n            minLength: 1\r\n            maxLength: 200\r\n      required:\r\n      - default_value\r\n      - input_type\r\n      - mutable\r\n      - name\r\n      - values\r\n    AttributeVal:\r\n      type: object\r\n      properties:\r\n        spec_id:\r\n          type: integer\r\n        value:\r\n          type: string\r\n          maxLength: 4096\r\n      required:\r\n      - spec_id\r\n      - value\r\n    AttributeValRequest:\r\n      type: object\r\n      properties:\r\n        spec_id:\r\n          type: integer\r\n        value:\r\n          type: string\r\n          maxLength: 4096\r\n      required:\r\n      - spec_id\r\n      - value\r\n    BackupWriteRequest:\r\n      oneOf:\r\n      - $ref: '#/components/schemas/ProjectFileRequest'\r\n      nullable: true\r\n    BasicUser:\r\n      type: object\r\n      properties:\r\n        url:\r\n          type: string\r\n          format: uri\r\n          readOnly: true\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        username:\r\n          type: string\r\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\r\n            only.\r\n          pattern: ^[\\w.@+-]+$\r\n          maxLength: 150\r\n        first_name:\r\n          type: string\r\n          maxLength: 150\r\n        last_name:\r\n          type: string\r\n          maxLength: 150\r\n      required:\r\n      - username\r\n    BasicUserRequest:\r\n      type: object\r\n      properties:\r\n        username:\r\n          type: string\r\n          minLength: 1\r\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\r\n            only.\r\n          pattern: ^[\\w.@+-]+$\r\n          maxLength: 150\r\n        first_name:\r\n          type: string\r\n          maxLength: 150\r\n        last_name:\r\n          type: string\r\n          maxLength: 150\r\n      required:\r\n      - username\r\n    ChunkType:\r\n      enum:\r\n      - video\r\n      - imageset\r\n      - list\r\n      type: string\r\n      description: |-\r\n        * `video` - VIDEO\r\n        * `imageset` - IMAGESET\r\n        * `list` - LIST\r\n    ClientEvents:\r\n      type: object\r\n      properties:\r\n        events:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Event'\r\n          default: []\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n      required:\r\n      - timestamp\r\n    ClientEventsRequest:\r\n      type: object\r\n      properties:\r\n        events:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/EventRequest'\r\n          default: []\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n      required:\r\n      - timestamp\r\n    CloudStorageContent:\r\n      type: object\r\n      properties:\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          description: This token is used to continue listing files in the bucket.\r\n        content:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/FileInfo'\r\n      required:\r\n      - content\r\n    CloudStorageRead:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        owner:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          nullable: true\r\n        manifests:\r\n          type: array\r\n          items:\r\n            type: string\r\n            maxLength: 1024\r\n          default: []\r\n        provider_type:\r\n          $ref: '#/components/schemas/ProviderTypeEnum'\r\n        resource:\r\n          type: string\r\n          maxLength: 222\r\n        display_name:\r\n          type: string\r\n          maxLength: 63\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        updated_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        credentials_type:\r\n          $ref: '#/components/schemas/CredentialsTypeEnum'\r\n        specific_attributes:\r\n          type: string\r\n          maxLength: 1024\r\n        description:\r\n          type: string\r\n        organization:\r\n          type: integer\r\n          readOnly: true\r\n          nullable: true\r\n      required:\r\n      - credentials_type\r\n      - display_name\r\n      - provider_type\r\n      - resource\r\n    CloudStorageWriteRequest:\r\n      type: object\r\n      properties:\r\n        provider_type:\r\n          $ref: '#/components/schemas/ProviderTypeEnum'\r\n        resource:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 222\r\n        display_name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 63\r\n        owner:\r\n          $ref: '#/components/schemas/BasicUserRequest'\r\n        credentials_type:\r\n          $ref: '#/components/schemas/CredentialsTypeEnum'\r\n        session_token:\r\n          type: string\r\n          maxLength: 440\r\n        account_name:\r\n          type: string\r\n          maxLength: 24\r\n        key:\r\n          type: string\r\n          maxLength: 40\r\n        secret_key:\r\n          type: string\r\n          maxLength: 44\r\n        connection_string:\r\n          type: string\r\n          maxLength: 440\r\n        key_file:\r\n          type: string\r\n          format: binary\r\n        specific_attributes:\r\n          type: string\r\n          maxLength: 1024\r\n        description:\r\n          type: string\r\n        manifests:\r\n          type: array\r\n          items:\r\n            type: string\r\n            minLength: 1\r\n            maxLength: 1024\r\n          default: []\r\n      required:\r\n      - credentials_type\r\n      - display_name\r\n      - provider_type\r\n      - resource\r\n    CommentRead:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        issue:\r\n          type: integer\r\n          readOnly: true\r\n        owner:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          nullable: true\r\n        message:\r\n          type: string\r\n          readOnly: true\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        updated_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n    CommentWriteRequest:\r\n      type: object\r\n      properties:\r\n        issue:\r\n          type: integer\r\n        message:\r\n          type: string\r\n          minLength: 1\r\n      required:\r\n      - issue\r\n    CommentsSummary:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          default: 0\r\n        url:\r\n          type: string\r\n          format: uri\r\n          readOnly: true\r\n    CredentialsTypeEnum:\r\n      enum:\r\n      - KEY_SECRET_KEY_PAIR\r\n      - ACCOUNT_NAME_TOKEN_PAIR\r\n      - KEY_FILE_PATH\r\n      - ANONYMOUS_ACCESS\r\n      - CONNECTION_STRING\r\n      type: string\r\n      description: |-\r\n        * `KEY_SECRET_KEY_PAIR` - KEY_SECRET_KEY_PAIR\r\n        * `ACCOUNT_NAME_TOKEN_PAIR` - ACCOUNT_NAME_TOKEN_PAIR\r\n        * `KEY_FILE_PATH` - KEY_FILE_PATH\r\n        * `ANONYMOUS_ACCESS` - ANONYMOUS_ACCESS\r\n        * `CONNECTION_STRING` - CONNECTION_STRING\r\n    DataMetaRead:\r\n      type: object\r\n      properties:\r\n        chunk_size:\r\n          type: integer\r\n          readOnly: true\r\n          nullable: true\r\n        size:\r\n          type: integer\r\n          readOnly: true\r\n          description: |\r\n            The number of frames included. Deleted frames do not affect this value.\r\n        image_quality:\r\n          type: integer\r\n          maximum: 100\r\n          minimum: 0\r\n        start_frame:\r\n          type: integer\r\n          readOnly: true\r\n        stop_frame:\r\n          type: integer\r\n          readOnly: true\r\n        frame_filter:\r\n          type: string\r\n          readOnly: true\r\n        frames:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/FrameMeta'\r\n          nullable: true\r\n        deleted_frames:\r\n          type: array\r\n          items:\r\n            type: integer\r\n            minimum: 0\r\n        included_frames:\r\n          type: array\r\n          items:\r\n            type: integer\r\n            minimum: 0\r\n          nullable: true\r\n          description: |\r\n            A list of valid frame ids. The None value means all frames are included.\r\n      required:\r\n      - deleted_frames\r\n      - frames\r\n      - image_quality\r\n    DataRequest:\r\n      type: object\r\n      description: |-\r\n        Read more about parameters here:\r\n        https://opencv.github.io/cvat/docs/manual/basics/create_an_annotation_task/#advanced-configuration\r\n      properties:\r\n        chunk_size:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: 0\r\n          nullable: true\r\n          description: Maximum number of frames per chunk\r\n        size:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: 0\r\n          description: The number of frames\r\n        image_quality:\r\n          type: integer\r\n          maximum: 100\r\n          minimum: 0\r\n          description: Image quality to use during annotation\r\n        start_frame:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: 0\r\n          description: First frame index\r\n        stop_frame:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: 0\r\n          description: Last frame index\r\n        frame_filter:\r\n          type: string\r\n          description: 'Frame filter. The only supported syntax is: ''step=N'''\r\n          maxLength: 256\r\n        compressed_chunk_type:\r\n          $ref: '#/components/schemas/ChunkType'\r\n        original_chunk_type:\r\n          $ref: '#/components/schemas/ChunkType'\r\n        client_files:\r\n          type: array\r\n          items:\r\n            type: string\r\n            format: binary\r\n          default: []\r\n          description: Uploaded files\r\n        server_files:\r\n          type: array\r\n          items:\r\n            type: string\r\n            minLength: 1\r\n            maxLength: 1024\r\n          default: []\r\n          description: Paths to files from a file share mounted on the server, or\r\n            from a cloud storage\r\n        remote_files:\r\n          type: array\r\n          items:\r\n            type: string\r\n            minLength: 1\r\n            maxLength: 1024\r\n          default: []\r\n          description: Direct download URLs for files\r\n        use_zip_chunks:\r\n          type: boolean\r\n          default: false\r\n          description: |\r\n            When true, video chunks will be represented as zip archives with decoded video frames.\r\n            When false, video chunks are represented as video segments\r\n        server_files_exclude:\r\n          type: array\r\n          items:\r\n            type: string\r\n            minLength: 1\r\n            maxLength: 1024\r\n          default: []\r\n          description: |\r\n            Paths to files and directories from a file share mounted on the server, or from a cloud storage\r\n            that should be excluded from the directories specified in server_files.\r\n            This option cannot be used together with filename_pattern.\r\n            The server_files_exclude parameter cannot be used to exclude a part of dataset from an archive.\r\n\r\n            Examples:\r\n\r\n            Exclude all files from subfolder 'sub/sub_1/sub_2'and single file 'sub/image.jpg' from specified folder:\r\n            server_files = ['sub/'], server_files_exclude = ['sub/sub_1/sub_2/', 'sub/image.jpg']\r\n\r\n            Exclude all cloud storage files with prefix 'sub' from the content of manifest file:\r\n            server_files = ['manifest.jsonl'], server_files_exclude = ['sub/']\r\n        cloud_storage_id:\r\n          type: integer\r\n          writeOnly: true\r\n          nullable: true\r\n          description: |\r\n            If not null, the files referenced by server_files will be retrieved\r\n            from the cloud storage with the specified ID.\r\n            The cloud storages applicable depend on the context.\r\n            In the user sandbox, only the user sandbox cloud storages can be used.\r\n            In an organization, only the organization cloud storages can be used.\r\n        use_cache:\r\n          type: boolean\r\n          default: false\r\n          description: |\r\n            Enable or disable task data chunk caching for the task.\r\n            Read more: https://opencv.github.io/cvat/docs/manual/advanced/data_on_fly/\r\n        copy_data:\r\n          type: boolean\r\n          default: false\r\n          description: |\r\n            Copy data from the server file share to CVAT during the task creation.\r\n            This will create a copy of the data, making the server independent from\r\n            the file share availability\r\n        storage_method:\r\n          $ref: '#/components/schemas/StorageMethod'\r\n        storage:\r\n          $ref: '#/components/schemas/StorageType'\r\n        sorting_method:\r\n          $ref: '#/components/schemas/SortingMethod'\r\n        filename_pattern:\r\n          type: string\r\n          nullable: true\r\n          minLength: 1\r\n          description: |\r\n            A filename filter for cloud storage files\r\n            listed in the manifest. Supports fnmatch wildcards.\r\n            Read more: https://docs.python.org/3/library/fnmatch.html\r\n        job_file_mapping:\r\n          type: array\r\n          items:\r\n            type: array\r\n            items:\r\n              type: string\r\n              minLength: 1\r\n              maxLength: 1024\r\n          writeOnly: true\r\n          description: |2\r\n\r\n            Represents a file-to-job mapping. Useful to specify a custom job\r\n            configuration during task creation. This option is not compatible with\r\n            most other job split-related options. Files in the jobs must not overlap or repeat.\r\n\r\n            Example:\r\n            [\r\n                [\"file1.jpg\", \"file2.jpg\"], # job #1 files\r\n                [\"file3.png\"], # job #2 files\r\n                [\"file4.jpg\", \"file5.png\", \"file6.bmp\"], # job #3 files\r\n            ]\r\n        upload_file_order:\r\n          type: array\r\n          items:\r\n            type: string\r\n            minLength: 1\r\n            maxLength: 1024\r\n          writeOnly: true\r\n          description: |\r\n            Allows to specify file order for client_file uploads.\r\n            Only valid with the \"predefined\" sorting method selected.\r\n\r\n            To state that the input files are sent in the correct order,\r\n            pass an empty list.\r\n\r\n            If you want to send files in an arbitrary order\r\n            and reorder them afterwards on the server,\r\n            pass the list of file names in the required order.\r\n      required:\r\n      - image_quality\r\n    DatasetFileRequest:\r\n      type: object\r\n      properties:\r\n        dataset_file:\r\n          type: string\r\n          format: binary\r\n      required:\r\n      - dataset_file\r\n    DatasetFormat:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          maxLength: 64\r\n        ext:\r\n          type: string\r\n          maxLength: 64\r\n        version:\r\n          type: string\r\n          maxLength: 64\r\n        enabled:\r\n          type: boolean\r\n        dimension:\r\n          type: string\r\n          maxLength: 2\r\n      required:\r\n      - dimension\r\n      - enabled\r\n      - ext\r\n      - name\r\n      - version\r\n    DatasetFormats:\r\n      type: object\r\n      properties:\r\n        importers:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/DatasetFormat'\r\n        exporters:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/DatasetFormat'\r\n      required:\r\n      - exporters\r\n      - importers\r\n    DatasetWriteRequest:\r\n      oneOf:\r\n      - $ref: '#/components/schemas/DatasetFileRequest'\r\n      nullable: true\r\n    Event:\r\n      type: object\r\n      properties:\r\n        scope:\r\n          type: string\r\n        obj_name:\r\n          type: string\r\n          nullable: true\r\n        obj_id:\r\n          type: integer\r\n          nullable: true\r\n        obj_val:\r\n          type: string\r\n          nullable: true\r\n        source:\r\n          type: string\r\n          nullable: true\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        count:\r\n          type: integer\r\n          nullable: true\r\n        duration:\r\n          type: integer\r\n          default: 0\r\n        project_id:\r\n          type: integer\r\n          nullable: true\r\n        task_id:\r\n          type: integer\r\n          nullable: true\r\n        job_id:\r\n          type: integer\r\n          nullable: true\r\n        user_id:\r\n          type: integer\r\n          nullable: true\r\n        user_name:\r\n          type: string\r\n          nullable: true\r\n        user_email:\r\n          type: string\r\n          nullable: true\r\n        org_id:\r\n          type: integer\r\n          nullable: true\r\n        org_slug:\r\n          type: string\r\n          nullable: true\r\n        payload:\r\n          type: string\r\n          nullable: true\r\n      required:\r\n      - scope\r\n      - timestamp\r\n    EventRequest:\r\n      type: object\r\n      properties:\r\n        scope:\r\n          type: string\r\n          minLength: 1\r\n        obj_name:\r\n          type: string\r\n          nullable: true\r\n          minLength: 1\r\n        obj_id:\r\n          type: integer\r\n          nullable: true\r\n        obj_val:\r\n          type: string\r\n          nullable: true\r\n          minLength: 1\r\n        source:\r\n          type: string\r\n          nullable: true\r\n          minLength: 1\r\n        timestamp:\r\n          type: string\r\n          format: date-time\r\n        count:\r\n          type: integer\r\n          nullable: true\r\n        duration:\r\n          type: integer\r\n          default: 0\r\n        project_id:\r\n          type: integer\r\n          nullable: true\r\n        task_id:\r\n          type: integer\r\n          nullable: true\r\n        job_id:\r\n          type: integer\r\n          nullable: true\r\n        user_id:\r\n          type: integer\r\n          nullable: true\r\n        user_name:\r\n          type: string\r\n          nullable: true\r\n          minLength: 1\r\n        user_email:\r\n          type: string\r\n          nullable: true\r\n          minLength: 1\r\n        org_id:\r\n          type: integer\r\n          nullable: true\r\n        org_slug:\r\n          type: string\r\n          nullable: true\r\n          minLength: 1\r\n        payload:\r\n          type: string\r\n          nullable: true\r\n          minLength: 1\r\n      required:\r\n      - scope\r\n      - timestamp\r\n    Events:\r\n      type: object\r\n      properties:\r\n        webhook_type:\r\n          $ref: '#/components/schemas/WebhookType'\r\n        events:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/EventsEnum'\r\n      required:\r\n      - events\r\n      - webhook_type\r\n    EventsEnum:\r\n      enum:\r\n      - create:comment\r\n      - create:invitation\r\n      - create:issue\r\n      - create:job\r\n      - create:membership\r\n      - create:project\r\n      - create:task\r\n      - delete:comment\r\n      - delete:invitation\r\n      - delete:issue\r\n      - delete:job\r\n      - delete:membership\r\n      - delete:organization\r\n      - delete:project\r\n      - delete:task\r\n      - update:comment\r\n      - update:issue\r\n      - update:job\r\n      - update:membership\r\n      - update:organization\r\n      - update:project\r\n      - update:task\r\n      type: string\r\n      description: |-\r\n        * `create:comment` - CREATE:COMMENT\r\n        * `create:invitation` - CREATE:INVITATION\r\n        * `create:issue` - CREATE:ISSUE\r\n        * `create:job` - CREATE:JOB\r\n        * `create:membership` - CREATE:MEMBERSHIP\r\n        * `create:project` - CREATE:PROJECT\r\n        * `create:task` - CREATE:TASK\r\n        * `delete:comment` - DELETE:COMMENT\r\n        * `delete:invitation` - DELETE:INVITATION\r\n        * `delete:issue` - DELETE:ISSUE\r\n        * `delete:job` - DELETE:JOB\r\n        * `delete:membership` - DELETE:MEMBERSHIP\r\n        * `delete:organization` - DELETE:ORGANIZATION\r\n        * `delete:project` - DELETE:PROJECT\r\n        * `delete:task` - DELETE:TASK\r\n        * `update:comment` - UPDATE:COMMENT\r\n        * `update:issue` - UPDATE:ISSUE\r\n        * `update:job` - UPDATE:JOB\r\n        * `update:membership` - UPDATE:MEMBERSHIP\r\n        * `update:organization` - UPDATE:ORGANIZATION\r\n        * `update:project` - UPDATE:PROJECT\r\n        * `update:task` - UPDATE:TASK\r\n    FileInfo:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          maxLength: 1024\r\n        type:\r\n          $ref: '#/components/schemas/FileInfoTypeEnum'\r\n        mime_type:\r\n          type: string\r\n          maxLength: 255\r\n      required:\r\n      - mime_type\r\n      - name\r\n      - type\r\n    FileInfoTypeEnum:\r\n      enum:\r\n      - REG\r\n      - DIR\r\n      type: string\r\n      description: |-\r\n        * `REG` - REG\r\n        * `DIR` - DIR\r\n    FrameMeta:\r\n      type: object\r\n      properties:\r\n        width:\r\n          type: integer\r\n        height:\r\n          type: integer\r\n        name:\r\n          type: string\r\n          maxLength: 1024\r\n        related_files:\r\n          type: integer\r\n        has_related_context:\r\n          type: boolean\r\n          readOnly: true\r\n      required:\r\n      - height\r\n      - name\r\n      - related_files\r\n      - width\r\n    FrameSelectionMethodEnum:\r\n      enum:\r\n      - random_uniform\r\n      - manual\r\n      type: string\r\n      description: |-\r\n        * `random_uniform` - RANDOM_UNIFORM\r\n        * `manual` - MANUAL\r\n    Function:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        provider:\r\n          type: string\r\n        url:\r\n          type: string\r\n        type:\r\n          allOf:\r\n          - $ref: '#/components/schemas/FunctionTypeEnum'\r\n          readOnly: true\r\n        name:\r\n          type: string\r\n          readOnly: true\r\n          default: ''\r\n        labels:\r\n          type: object\r\n          additionalProperties: {}\r\n          readOnly: true\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        updated_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        owner:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          readOnly: true\r\n        call_count:\r\n          type: integer\r\n          readOnly: true\r\n        organization:\r\n          type: integer\r\n          readOnly: true\r\n          nullable: true\r\n    FunctionCall:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          description: Request id\r\n        function:\r\n          $ref: '#/components/schemas/FunctionCallParams'\r\n        status:\r\n          type: string\r\n          nullable: true\r\n        progress:\r\n          type: integer\r\n          nullable: true\r\n          default: 0\r\n        enqueued:\r\n          type: string\r\n          format: date-time\r\n          nullable: true\r\n        started:\r\n          type: string\r\n          format: date-time\r\n          nullable: true\r\n        ended:\r\n          type: string\r\n          format: date-time\r\n          nullable: true\r\n        exc_info:\r\n          type: string\r\n          nullable: true\r\n      required:\r\n      - ended\r\n      - enqueued\r\n      - function\r\n      - id\r\n      - started\r\n      - status\r\n    FunctionCallParams:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: string\r\n          nullable: true\r\n          description: The name of the function\r\n        task:\r\n          type: integer\r\n          nullable: true\r\n          description: The id of the task\r\n        job:\r\n          type: integer\r\n          description: The id of the job\r\n        threshold:\r\n          type: number\r\n          format: double\r\n          nullable: true\r\n      required:\r\n      - id\r\n      - task\r\n      - threshold\r\n    FunctionCallRequest:\r\n      type: object\r\n      properties:\r\n        function:\r\n          type: string\r\n          minLength: 1\r\n          description: The name of the function to execute\r\n        task:\r\n          type: integer\r\n          description: The id of the task to annotate\r\n        job:\r\n          type: integer\r\n          description: The id of the job to annotate\r\n        quality:\r\n          allOf:\r\n          - $ref: '#/components/schemas/QualityEnum'\r\n          default: original\r\n          description: |-\r\n            The quality of the images to use in the model run\r\n\r\n            * `compressed` - compressed\r\n            * `original` - original\r\n        cleanup:\r\n          type: boolean\r\n          default: false\r\n        convMaskToPoly:\r\n          type: boolean\r\n          default: false\r\n        threshold:\r\n          type: number\r\n          format: double\r\n        mapping:\r\n          type: object\r\n          additionalProperties:\r\n            type: object\r\n            additionalProperties: {}\r\n          description: Label mapping from the model to the task labels\r\n        max_distance:\r\n          type: integer\r\n      required:\r\n      - function\r\n      - task\r\n    FunctionRequest:\r\n      type: object\r\n      properties:\r\n        provider:\r\n          type: string\r\n        url:\r\n          type: string\r\n        api_key:\r\n          type: string\r\n          writeOnly: true\r\n    FunctionTypeEnum:\r\n      enum:\r\n      - object-detection\r\n      - classification\r\n      - instance-segmentation\r\n      - semantic-segmentation\r\n      type: string\r\n      description: |-\r\n        * `object-detection` - OBJECT_DETECTION\r\n        * `classification` - CLASSIFICATION\r\n        * `instance-segmentation` - INSTANCE_SEGMENTATION\r\n        * `semantic-segmentation` - SEMANTIC_SEGMENTATION\r\n    InputTypeEnum:\r\n      enum:\r\n      - checkbox\r\n      - radio\r\n      - number\r\n      - text\r\n      - select\r\n      type: string\r\n      description: |-\r\n        * `checkbox` - CHECKBOX\r\n        * `radio` - RADIO\r\n        * `number` - NUMBER\r\n        * `text` - TEXT\r\n        * `select` - SELECT\r\n    InvitationRead:\r\n      type: object\r\n      properties:\r\n        key:\r\n          type: string\r\n          readOnly: true\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        owner:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          nullable: true\r\n        role:\r\n          $ref: '#/components/schemas/RoleEnum'\r\n        user:\r\n          $ref: '#/components/schemas/BasicUser'\r\n        organization:\r\n          type: integer\r\n      required:\r\n      - organization\r\n      - owner\r\n      - role\r\n      - user\r\n    InvitationWriteRequest:\r\n      type: object\r\n      properties:\r\n        role:\r\n          $ref: '#/components/schemas/RoleEnum'\r\n        email:\r\n          type: string\r\n          format: email\r\n          minLength: 1\r\n      required:\r\n      - email\r\n      - role\r\n    IssueRead:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        frame:\r\n          type: integer\r\n          readOnly: true\r\n        position:\r\n          type: array\r\n          items:\r\n            type: number\r\n            format: double\r\n        job:\r\n          type: integer\r\n          readOnly: true\r\n        owner:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          nullable: true\r\n        assignee:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          nullable: true\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n          nullable: true\r\n        updated_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n          nullable: true\r\n        resolved:\r\n          type: boolean\r\n          readOnly: true\r\n        comments:\r\n          $ref: '#/components/schemas/CommentsSummary'\r\n      required:\r\n      - comments\r\n      - position\r\n    IssueWriteRequest:\r\n      type: object\r\n      properties:\r\n        frame:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: 0\r\n        position:\r\n          type: array\r\n          items:\r\n            type: number\r\n            format: double\r\n        job:\r\n          type: integer\r\n        assignee:\r\n          type: integer\r\n          nullable: true\r\n        message:\r\n          type: string\r\n          minLength: 1\r\n        resolved:\r\n          type: boolean\r\n      required:\r\n      - frame\r\n      - job\r\n      - message\r\n      - position\r\n    IssuesSummary:\r\n      type: object\r\n      properties:\r\n        url:\r\n          type: string\r\n          format: uri\r\n          readOnly: true\r\n        count:\r\n          type: integer\r\n          readOnly: true\r\n    JobAnnotationsUpdateRequest:\r\n      oneOf:\r\n      - $ref: '#/components/schemas/LabeledDataRequest'\r\n      - $ref: '#/components/schemas/AnnotationFileRequest'\r\n    JobRead:\r\n      type: object\r\n      properties:\r\n        url:\r\n          type: string\r\n          format: uri\r\n          readOnly: true\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        task_id:\r\n          type: integer\r\n          readOnly: true\r\n        project_id:\r\n          type: integer\r\n          readOnly: true\r\n          nullable: true\r\n        assignee:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          readOnly: true\r\n          nullable: true\r\n        guide_id:\r\n          type: integer\r\n          readOnly: true\r\n          nullable: true\r\n        dimension:\r\n          type: string\r\n          readOnly: true\r\n          maxLength: 2\r\n        bug_tracker:\r\n          type: string\r\n          readOnly: true\r\n          nullable: true\r\n          maxLength: 2000\r\n        status:\r\n          allOf:\r\n          - $ref: '#/components/schemas/JobStatus'\r\n          readOnly: true\r\n        stage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/JobStage'\r\n          readOnly: true\r\n        state:\r\n          allOf:\r\n          - $ref: '#/components/schemas/OperationStatus'\r\n          readOnly: true\r\n        mode:\r\n          type: string\r\n          readOnly: true\r\n        frame_count:\r\n          type: integer\r\n          readOnly: true\r\n        start_frame:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: -2147483648\r\n          readOnly: true\r\n        stop_frame:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: -2147483648\r\n          readOnly: true\r\n        data_chunk_size:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: 0\r\n          nullable: true\r\n          readOnly: true\r\n        data_compressed_chunk_type:\r\n          allOf:\r\n          - $ref: '#/components/schemas/ChunkType'\r\n          readOnly: true\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        updated_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        issues:\r\n          $ref: '#/components/schemas/IssuesSummary'\r\n        labels:\r\n          $ref: '#/components/schemas/LabelsSummary'\r\n        type:\r\n          allOf:\r\n          - $ref: '#/components/schemas/JobType'\r\n          readOnly: true\r\n        organization:\r\n          type: integer\r\n          readOnly: true\r\n          nullable: true\r\n      required:\r\n      - issues\r\n      - labels\r\n    JobStage:\r\n      enum:\r\n      - annotation\r\n      - validation\r\n      - acceptance\r\n      type: string\r\n      description: |-\r\n        * `annotation` - ANNOTATION\r\n        * `validation` - VALIDATION\r\n        * `acceptance` - ACCEPTANCE\r\n    JobStatus:\r\n      enum:\r\n      - annotation\r\n      - validation\r\n      - completed\r\n      type: string\r\n      description: |-\r\n        * `annotation` - ANNOTATION\r\n        * `validation` - VALIDATION\r\n        * `completed` - COMPLETED\r\n    JobType:\r\n      enum:\r\n      - annotation\r\n      - ground_truth\r\n      type: string\r\n      description: |-\r\n        * `annotation` - ANNOTATION\r\n        * `ground_truth` - GROUND_TRUTH\r\n    JobWriteRequest:\r\n      type: object\r\n      properties:\r\n        assignee:\r\n          type: integer\r\n          nullable: true\r\n        stage:\r\n          $ref: '#/components/schemas/JobStage'\r\n        state:\r\n          $ref: '#/components/schemas/OperationStatus'\r\n        type:\r\n          $ref: '#/components/schemas/JobType'\r\n        task_id:\r\n          type: integer\r\n        frame_selection_method:\r\n          $ref: '#/components/schemas/FrameSelectionMethodEnum'\r\n        frame_count:\r\n          type: integer\r\n          minimum: 0\r\n          description: |\r\n            The number of frames included in the job.\r\n            Applicable only to the random frame selection\r\n        seed:\r\n          type: integer\r\n          minimum: 0\r\n          description: |\r\n            The seed value for the random number generator.\r\n            The same value will produce the same frame sets.\r\n            Applicable only to the random frame selection.\r\n            By default, a random value is used.\r\n        frames:\r\n          type: array\r\n          items:\r\n            type: integer\r\n            minimum: 0\r\n          description: |\r\n            The list of frame ids. Applicable only to the manual frame selection\r\n      required:\r\n      - task_id\r\n      - type\r\n    JobsSummary:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          default: 0\r\n        completed:\r\n          type: integer\r\n          nullable: true\r\n        validation:\r\n          type: integer\r\n          nullable: true\r\n        url:\r\n          type: string\r\n          format: uri\r\n          readOnly: true\r\n      required:\r\n      - completed\r\n      - validation\r\n    Label:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n        name:\r\n          type: string\r\n          maxLength: 64\r\n        color:\r\n          type: string\r\n          description: The hex value for the RGB color. Will be generated automatically,\r\n            unless specified explicitly.\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Attribute'\r\n          default: []\r\n          description: The list of attributes. If you want to remove an attribute,\r\n            you need to recreate the label and specify the remaining attributes.\r\n        type:\r\n          type: string\r\n          description: Associated annotation type for this label\r\n        svg:\r\n          type: string\r\n        sublabels:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Sublabel'\r\n        project_id:\r\n          type: integer\r\n          nullable: true\r\n          readOnly: true\r\n        task_id:\r\n          type: integer\r\n          nullable: true\r\n          readOnly: true\r\n        parent_id:\r\n          type: integer\r\n          nullable: true\r\n          readOnly: true\r\n        has_parent:\r\n          type: boolean\r\n          readOnly: true\r\n      required:\r\n      - name\r\n    LabeledData:\r\n      type: object\r\n      properties:\r\n        version:\r\n          type: integer\r\n          default: 0\r\n        tags:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/LabeledImage'\r\n          default: []\r\n        shapes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/LabeledShape'\r\n          default: []\r\n        tracks:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/LabeledTrack'\r\n          default: []\r\n    LabeledDataRequest:\r\n      type: object\r\n      properties:\r\n        version:\r\n          type: integer\r\n          default: 0\r\n        tags:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/LabeledImageRequest'\r\n          default: []\r\n        shapes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/LabeledShapeRequest'\r\n          default: []\r\n        tracks:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/LabeledTrackRequest'\r\n          default: []\r\n    LabeledImage:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          nullable: true\r\n        frame:\r\n          type: integer\r\n          minimum: 0\r\n        label_id:\r\n          type: integer\r\n          minimum: 0\r\n        group:\r\n          type: integer\r\n          minimum: 0\r\n          nullable: true\r\n        source:\r\n          type: string\r\n          default: manual\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeVal'\r\n          default: []\r\n      required:\r\n      - frame\r\n      - label_id\r\n    LabeledImageRequest:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          nullable: true\r\n        frame:\r\n          type: integer\r\n          minimum: 0\r\n        label_id:\r\n          type: integer\r\n          minimum: 0\r\n        group:\r\n          type: integer\r\n          minimum: 0\r\n          nullable: true\r\n        source:\r\n          type: string\r\n          minLength: 1\r\n          default: manual\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeValRequest'\r\n          default: []\r\n      required:\r\n      - frame\r\n      - label_id\r\n    LabeledShape:\r\n      type: object\r\n      properties:\r\n        type:\r\n          $ref: '#/components/schemas/ShapeType'\r\n        occluded:\r\n          type: boolean\r\n          default: false\r\n        outside:\r\n          type: boolean\r\n          default: false\r\n        z_order:\r\n          type: integer\r\n          default: 0\r\n        rotation:\r\n          type: number\r\n          format: double\r\n          maximum: 360\r\n          minimum: 0\r\n          default: 0.0\r\n        points:\r\n          type: array\r\n          items:\r\n            type: number\r\n            format: double\r\n        id:\r\n          type: integer\r\n          nullable: true\r\n        frame:\r\n          type: integer\r\n          minimum: 0\r\n        label_id:\r\n          type: integer\r\n          minimum: 0\r\n        group:\r\n          type: integer\r\n          minimum: 0\r\n          nullable: true\r\n        source:\r\n          type: string\r\n          default: manual\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeVal'\r\n          default: []\r\n        elements:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/SubLabeledShape'\r\n      required:\r\n      - frame\r\n      - label_id\r\n      - type\r\n    LabeledShapeRequest:\r\n      type: object\r\n      properties:\r\n        type:\r\n          $ref: '#/components/schemas/ShapeType'\r\n        occluded:\r\n          type: boolean\r\n          default: false\r\n        outside:\r\n          type: boolean\r\n          default: false\r\n        z_order:\r\n          type: integer\r\n          default: 0\r\n        rotation:\r\n          type: number\r\n          format: double\r\n          maximum: 360\r\n          minimum: 0\r\n          default: 0.0\r\n        points:\r\n          type: array\r\n          items:\r\n            type: number\r\n            format: double\r\n        id:\r\n          type: integer\r\n          nullable: true\r\n        frame:\r\n          type: integer\r\n          minimum: 0\r\n        label_id:\r\n          type: integer\r\n          minimum: 0\r\n        group:\r\n          type: integer\r\n          minimum: 0\r\n          nullable: true\r\n        source:\r\n          type: string\r\n          minLength: 1\r\n          default: manual\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeValRequest'\r\n          default: []\r\n        elements:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/SubLabeledShapeRequest'\r\n      required:\r\n      - frame\r\n      - label_id\r\n      - type\r\n    LabeledTrack:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          nullable: true\r\n        frame:\r\n          type: integer\r\n          minimum: 0\r\n        label_id:\r\n          type: integer\r\n          minimum: 0\r\n        group:\r\n          type: integer\r\n          minimum: 0\r\n          nullable: true\r\n        source:\r\n          type: string\r\n          default: manual\r\n        shapes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/TrackedShape'\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeVal'\r\n          default: []\r\n        elements:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/SubLabeledTrack'\r\n      required:\r\n      - frame\r\n      - label_id\r\n      - shapes\r\n    LabeledTrackRequest:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          nullable: true\r\n        frame:\r\n          type: integer\r\n          minimum: 0\r\n        label_id:\r\n          type: integer\r\n          minimum: 0\r\n        group:\r\n          type: integer\r\n          minimum: 0\r\n          nullable: true\r\n        source:\r\n          type: string\r\n          minLength: 1\r\n          default: manual\r\n        shapes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/TrackedShapeRequest'\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeValRequest'\r\n          default: []\r\n        elements:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/SubLabeledTrackRequest'\r\n      required:\r\n      - frame\r\n      - label_id\r\n      - shapes\r\n    LabelsSummary:\r\n      type: object\r\n      properties:\r\n        url:\r\n          type: string\r\n          format: uri\r\n          readOnly: true\r\n        count:\r\n          type: integer\r\n          readOnly: true\r\n    Limit:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        user:\r\n          type: integer\r\n          nullable: true\r\n        org:\r\n          type: integer\r\n          nullable: true\r\n        type:\r\n          $ref: '#/components/schemas/LimitTypeEnum'\r\n        limits:\r\n          $ref: '#/components/schemas/LimitsField'\r\n      required:\r\n      - limits\r\n      - type\r\n    LimitRequest:\r\n      type: object\r\n      properties:\r\n        user:\r\n          type: integer\r\n          nullable: true\r\n        org:\r\n          type: integer\r\n          nullable: true\r\n        type:\r\n          $ref: '#/components/schemas/LimitTypeEnum'\r\n        limits:\r\n          $ref: '#/components/schemas/LimitsFieldRequest'\r\n      required:\r\n      - limits\r\n      - type\r\n    LimitTypeEnum:\r\n      enum:\r\n      - default\r\n      - paid\r\n      - custom\r\n      type: string\r\n      description: |-\r\n        * `default` - DEFAULT\r\n        * `paid` - PAID\r\n        * `custom` - CUSTOM\r\n    LimitsField:\r\n      type: object\r\n      description: |-\r\n        The serializer validates limits field names and their value types.\r\n        Null allowed in order to indicate unlimited value.\r\n      properties:\r\n        tasks:\r\n          type: integer\r\n          nullable: true\r\n        projects:\r\n          type: integer\r\n          nullable: true\r\n        cloud_storages:\r\n          type: integer\r\n          nullable: true\r\n        tasks_per_project:\r\n          type: integer\r\n          nullable: true\r\n        webhooks_per_project:\r\n          type: integer\r\n          nullable: true\r\n        function_calls:\r\n          type: integer\r\n          nullable: true\r\n        automatic_annotation:\r\n          type: boolean\r\n          nullable: true\r\n        job_export_dataset:\r\n          type: boolean\r\n          nullable: true\r\n        task_export_dataset:\r\n          type: boolean\r\n          nullable: true\r\n        project_export_dataset:\r\n          type: boolean\r\n          nullable: true\r\n        webhooks_per_organization:\r\n          type: integer\r\n          nullable: true\r\n        memberships:\r\n          type: integer\r\n          nullable: true\r\n        organizations:\r\n          type: integer\r\n          nullable: true\r\n      required:\r\n      - automatic_annotation\r\n      - cloud_storages\r\n      - function_calls\r\n      - job_export_dataset\r\n      - project_export_dataset\r\n      - projects\r\n      - task_export_dataset\r\n      - tasks\r\n      - tasks_per_project\r\n      - webhooks_per_project\r\n    LimitsFieldRequest:\r\n      type: object\r\n      description: |-\r\n        The serializer validates limits field names and their value types.\r\n        Null allowed in order to indicate unlimited value.\r\n      properties:\r\n        tasks:\r\n          type: integer\r\n          nullable: true\r\n        projects:\r\n          type: integer\r\n          nullable: true\r\n        cloud_storages:\r\n          type: integer\r\n          nullable: true\r\n        tasks_per_project:\r\n          type: integer\r\n          nullable: true\r\n        webhooks_per_project:\r\n          type: integer\r\n          nullable: true\r\n        function_calls:\r\n          type: integer\r\n          nullable: true\r\n        automatic_annotation:\r\n          type: boolean\r\n          nullable: true\r\n        job_export_dataset:\r\n          type: boolean\r\n          nullable: true\r\n        task_export_dataset:\r\n          type: boolean\r\n          nullable: true\r\n        project_export_dataset:\r\n          type: boolean\r\n          nullable: true\r\n        webhooks_per_organization:\r\n          type: integer\r\n          nullable: true\r\n        memberships:\r\n          type: integer\r\n          nullable: true\r\n        organizations:\r\n          type: integer\r\n          nullable: true\r\n      required:\r\n      - automatic_annotation\r\n      - cloud_storages\r\n      - function_calls\r\n      - job_export_dataset\r\n      - project_export_dataset\r\n      - projects\r\n      - task_export_dataset\r\n      - tasks\r\n      - tasks_per_project\r\n      - webhooks_per_project\r\n    LocationEnum:\r\n      enum:\r\n      - cloud_storage\r\n      - local\r\n      type: string\r\n      description: |-\r\n        * `cloud_storage` - CLOUD_STORAGE\r\n        * `local` - LOCAL\r\n    LoginSerializerExRequest:\r\n      type: object\r\n      properties:\r\n        username:\r\n          type: string\r\n        email:\r\n          type: string\r\n          format: email\r\n        password:\r\n          type: string\r\n          minLength: 1\r\n      required:\r\n      - password\r\n    MembershipRead:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        user:\r\n          $ref: '#/components/schemas/BasicUser'\r\n        organization:\r\n          type: integer\r\n          readOnly: true\r\n        is_active:\r\n          type: boolean\r\n          readOnly: true\r\n        joined_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n          nullable: true\r\n        role:\r\n          allOf:\r\n          - $ref: '#/components/schemas/RoleEnum'\r\n          readOnly: true\r\n        invitation:\r\n          type: string\r\n          readOnly: true\r\n      required:\r\n      - user\r\n    MetaUser:\r\n      anyOf:\r\n      - $ref: '#/components/schemas/User'\r\n      - $ref: '#/components/schemas/BasicUser'\r\n    NullEnum:\r\n      enum:\r\n      - null\r\n    OnlineFunctionCallRequest:\r\n      type: object\r\n      properties:\r\n        job:\r\n          type: integer\r\n        task:\r\n          type: integer\r\n    OperationStatus:\r\n      enum:\r\n      - new\r\n      - in progress\r\n      - completed\r\n      - rejected\r\n      type: string\r\n      description: |-\r\n        * `new` - NEW\r\n        * `in progress` - IN_PROGRESS\r\n        * `completed` - COMPLETED\r\n        * `rejected` - REJECTED\r\n    OrganizationRead:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        slug:\r\n          type: string\r\n          readOnly: true\r\n          pattern: ^[-a-zA-Z0-9_]+$\r\n        name:\r\n          type: string\r\n          readOnly: true\r\n        description:\r\n          type: string\r\n          readOnly: true\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        updated_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        contact:\r\n          type: object\r\n          additionalProperties: {}\r\n          readOnly: true\r\n        owner:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          nullable: true\r\n      required:\r\n      - owner\r\n    OrganizationWriteRequest:\r\n      type: object\r\n      properties:\r\n        slug:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 16\r\n          pattern: ^[-a-zA-Z0-9_]+$\r\n        name:\r\n          type: string\r\n          maxLength: 64\r\n        description:\r\n          type: string\r\n        contact:\r\n          type: object\r\n          additionalProperties: {}\r\n      required:\r\n      - slug\r\n    PaginatedAnnotationConflictList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AnnotationConflict'\r\n    PaginatedCloudStorageReadList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/CloudStorageRead'\r\n    PaginatedCommentReadList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/CommentRead'\r\n    PaginatedFunctionList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Function'\r\n    PaginatedInvitationReadList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/InvitationRead'\r\n    PaginatedIssueReadList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/IssueRead'\r\n    PaginatedJobReadList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/JobRead'\r\n    PaginatedLabelList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Label'\r\n    PaginatedLimitList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Limit'\r\n    PaginatedMembershipReadList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/MembershipRead'\r\n    PaginatedMetaUserList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/MetaUser'\r\n    PaginatedOrganizationReadList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/OrganizationRead'\r\n    PaginatedProjectReadList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/ProjectRead'\r\n    PaginatedQualityReportList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/QualityReport'\r\n    PaginatedQualitySettingsList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/QualitySettings'\r\n    PaginatedTaskReadList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/TaskRead'\r\n    PaginatedUsageList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Usage'\r\n    PaginatedWebhookDeliveryReadList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/WebhookDeliveryRead'\r\n    PaginatedWebhookReadList:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          example: 123\r\n        next:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=4\r\n        previous:\r\n          type: string\r\n          nullable: true\r\n          format: uri\r\n          example: http://api.example.org/accounts/?page=2\r\n        results:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/WebhookRead'\r\n    PasswordChangeRequest:\r\n      type: object\r\n      properties:\r\n        old_password:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 128\r\n        new_password1:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 128\r\n        new_password2:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 128\r\n      required:\r\n      - new_password1\r\n      - new_password2\r\n      - old_password\r\n    PasswordResetConfirmRequest:\r\n      type: object\r\n      description: Serializer for confirming a password reset attempt.\r\n      properties:\r\n        new_password1:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 128\r\n        new_password2:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 128\r\n        uid:\r\n          type: string\r\n          minLength: 1\r\n        token:\r\n          type: string\r\n          minLength: 1\r\n      required:\r\n      - new_password1\r\n      - new_password2\r\n      - token\r\n      - uid\r\n    PasswordResetSerializerExRequest:\r\n      type: object\r\n      description: Serializer for requesting a password reset e-mail.\r\n      properties:\r\n        email:\r\n          type: string\r\n          format: email\r\n          minLength: 1\r\n      required:\r\n      - email\r\n    PatchedAnnotationGuideWriteRequest:\r\n      type: object\r\n      properties:\r\n        task_id:\r\n          type: integer\r\n          nullable: true\r\n        project_id:\r\n          type: integer\r\n          nullable: true\r\n        markdown:\r\n          type: string\r\n    PatchedCloudStorageWriteRequest:\r\n      type: object\r\n      properties:\r\n        provider_type:\r\n          $ref: '#/components/schemas/ProviderTypeEnum'\r\n        resource:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 222\r\n        display_name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 63\r\n        owner:\r\n          $ref: '#/components/schemas/BasicUserRequest'\r\n        credentials_type:\r\n          $ref: '#/components/schemas/CredentialsTypeEnum'\r\n        session_token:\r\n          type: string\r\n          maxLength: 440\r\n        account_name:\r\n          type: string\r\n          maxLength: 24\r\n        key:\r\n          type: string\r\n          maxLength: 40\r\n        secret_key:\r\n          type: string\r\n          maxLength: 44\r\n        connection_string:\r\n          type: string\r\n          maxLength: 440\r\n        key_file:\r\n          type: string\r\n          format: binary\r\n        specific_attributes:\r\n          type: string\r\n          maxLength: 1024\r\n        description:\r\n          type: string\r\n        manifests:\r\n          type: array\r\n          items:\r\n            type: string\r\n            minLength: 1\r\n            maxLength: 1024\r\n          default: []\r\n    PatchedCommentWriteRequest:\r\n      type: object\r\n      properties:\r\n        message:\r\n          type: string\r\n          minLength: 1\r\n    PatchedDataMetaWriteRequest:\r\n      type: object\r\n      properties:\r\n        deleted_frames:\r\n          type: array\r\n          items:\r\n            type: integer\r\n            minimum: 0\r\n    PatchedInvitationWriteRequest:\r\n      type: object\r\n      properties:\r\n        role:\r\n          $ref: '#/components/schemas/RoleEnum'\r\n        email:\r\n          type: string\r\n          format: email\r\n          minLength: 1\r\n    PatchedIssueWriteRequest:\r\n      type: object\r\n      properties:\r\n        position:\r\n          type: array\r\n          items:\r\n            type: number\r\n            format: double\r\n        assignee:\r\n          type: integer\r\n          nullable: true\r\n        resolved:\r\n          type: boolean\r\n    PatchedJobWriteRequest:\r\n      type: object\r\n      properties:\r\n        assignee:\r\n          type: integer\r\n          nullable: true\r\n        stage:\r\n          $ref: '#/components/schemas/JobStage'\r\n        state:\r\n          $ref: '#/components/schemas/OperationStatus'\r\n    PatchedLabelRequest:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 64\r\n        color:\r\n          type: string\r\n          description: The hex value for the RGB color. Will be generated automatically,\r\n            unless specified explicitly.\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeRequest'\r\n          default: []\r\n          description: The list of attributes. If you want to remove an attribute,\r\n            you need to recreate the label and specify the remaining attributes.\r\n        deleted:\r\n          type: boolean\r\n          writeOnly: true\r\n          description: Delete the label. Only applicable in the PATCH methods of a\r\n            project or a task.\r\n        type:\r\n          type: string\r\n          description: Associated annotation type for this label\r\n        svg:\r\n          type: string\r\n        sublabels:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/SublabelRequest'\r\n    PatchedLabeledDataRequest:\r\n      type: object\r\n      properties:\r\n        version:\r\n          type: integer\r\n          default: 0\r\n        tags:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/LabeledImageRequest'\r\n          default: []\r\n        shapes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/LabeledShapeRequest'\r\n          default: []\r\n        tracks:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/LabeledTrackRequest'\r\n          default: []\r\n    PatchedLimitRequest:\r\n      type: object\r\n      properties:\r\n        user:\r\n          type: integer\r\n          nullable: true\r\n        org:\r\n          type: integer\r\n          nullable: true\r\n        type:\r\n          $ref: '#/components/schemas/LimitTypeEnum'\r\n        limits:\r\n          $ref: '#/components/schemas/LimitsFieldRequest'\r\n    PatchedMembershipWriteRequest:\r\n      type: object\r\n      properties:\r\n        role:\r\n          $ref: '#/components/schemas/RoleEnum'\r\n    PatchedOrganizationWriteRequest:\r\n      type: object\r\n      properties:\r\n        slug:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 16\r\n          pattern: ^[-a-zA-Z0-9_]+$\r\n        name:\r\n          type: string\r\n          maxLength: 64\r\n        description:\r\n          type: string\r\n        contact:\r\n          type: object\r\n          additionalProperties: {}\r\n    PatchedProjectWriteRequest:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 256\r\n        labels:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/PatchedLabelRequest'\r\n          writeOnly: true\r\n          default: []\r\n        owner_id:\r\n          type: integer\r\n          writeOnly: true\r\n          nullable: true\r\n        assignee_id:\r\n          type: integer\r\n          writeOnly: true\r\n          nullable: true\r\n        bug_tracker:\r\n          type: string\r\n          maxLength: 2000\r\n        target_storage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/StorageRequest'\r\n          writeOnly: true\r\n        source_storage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/StorageRequest'\r\n          writeOnly: true\r\n        task_subsets:\r\n          type: array\r\n          items:\r\n            type: string\r\n            minLength: 1\r\n          writeOnly: true\r\n    PatchedQualitySettingsRequest:\r\n      type: object\r\n      properties:\r\n        iou_threshold:\r\n          type: number\r\n          format: double\r\n          description: Used for distinction between matched / unmatched shapes\r\n        oks_sigma:\r\n          type: number\r\n          format: double\r\n          description: |\r\n            Like IoU threshold, but for points.\r\n            The percent of the bbox area, used as the radius of the circle around the GT point,\r\n            where the checked point is expected to be.\r\n            Read more: https://cocodataset.org/#keypoints-eval\r\n        line_thickness:\r\n          type: number\r\n          format: double\r\n          description: |\r\n            Thickness of polylines, relatively to the (image area) ^ 0.5.\r\n            The distance to the boundary around the GT line,\r\n            inside of which the checked line points should be\r\n        low_overlap_threshold:\r\n          type: number\r\n          format: double\r\n          description: |\r\n            Used for distinction between strong / weak (low_overlap) matches\r\n        compare_line_orientation:\r\n          type: boolean\r\n          description: Enables or disables polyline orientation comparison\r\n        line_orientation_threshold:\r\n          type: number\r\n          format: double\r\n          description: |\r\n            The minimal gain in the GT IoU between the given and reversed line directions\r\n            to consider the line inverted.\r\n            Only used when the 'compare_line_orientation' parameter is true\r\n        compare_groups:\r\n          type: boolean\r\n          description: Enables or disables annotation group checks\r\n        group_match_threshold:\r\n          type: number\r\n          format: double\r\n          description: |\r\n            Minimal IoU for groups to be considered matching.\r\n            Only used when the 'compare_groups' parameter is true\r\n        check_covered_annotations:\r\n          type: boolean\r\n          description: |\r\n            Check for partially-covered annotations, useful in segmentation tasks\r\n        object_visibility_threshold:\r\n          type: number\r\n          format: double\r\n          description: |\r\n            Minimal visible area percent of the spatial annotations (polygons, masks)\r\n            for reporting covered annotations.\r\n            Only used when the 'object_visibility_threshold' parameter is true\r\n        panoptic_comparison:\r\n          type: boolean\r\n          description: |\r\n            Use only the visible part of the masks and polygons in comparisons\r\n        compare_attributes:\r\n          type: boolean\r\n          description: Enables or disables annotation attribute comparison\r\n    PatchedTaskWriteRequest:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 256\r\n        project_id:\r\n          type: integer\r\n          nullable: true\r\n        owner_id:\r\n          type: integer\r\n          writeOnly: true\r\n          nullable: true\r\n        assignee_id:\r\n          type: integer\r\n          writeOnly: true\r\n          nullable: true\r\n        bug_tracker:\r\n          type: string\r\n          maxLength: 2000\r\n        labels:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/PatchedLabelRequest'\r\n        subset:\r\n          type: string\r\n          maxLength: 64\r\n        target_storage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/StorageRequest'\r\n          nullable: true\r\n        source_storage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/StorageRequest'\r\n          nullable: true\r\n    PatchedUserRequest:\r\n      type: object\r\n      properties:\r\n        username:\r\n          type: string\r\n          minLength: 1\r\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\r\n            only.\r\n          pattern: ^[\\w.@+-]+$\r\n          maxLength: 150\r\n        first_name:\r\n          type: string\r\n          maxLength: 150\r\n        last_name:\r\n          type: string\r\n          maxLength: 150\r\n        email:\r\n          type: string\r\n          format: email\r\n          title: Email address\r\n          maxLength: 254\r\n        groups:\r\n          type: array\r\n          items:\r\n            type: string\r\n            minLength: 1\r\n        is_staff:\r\n          type: boolean\r\n          title: Staff status\r\n          description: Designates whether the user can log into this admin site.\r\n        is_superuser:\r\n          type: boolean\r\n          title: Superuser status\r\n          description: Designates that this user has all permissions without explicitly\r\n            assigning them.\r\n        is_active:\r\n          type: boolean\r\n          title: Active\r\n          description: Designates whether this user should be treated as active. Unselect\r\n            this instead of deleting accounts.\r\n    PatchedWebhookWriteRequest:\r\n      type: object\r\n      properties:\r\n        target_url:\r\n          type: string\r\n          format: uri\r\n          minLength: 1\r\n          maxLength: 8192\r\n        description:\r\n          type: string\r\n          maxLength: 128\r\n        content_type:\r\n          $ref: '#/components/schemas/WebhookContentType'\r\n        secret:\r\n          type: string\r\n          maxLength: 64\r\n        is_active:\r\n          type: boolean\r\n        enable_ssl:\r\n          type: boolean\r\n        events:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/EventsEnum'\r\n          writeOnly: true\r\n    Plugins:\r\n      type: object\r\n      properties:\r\n        GIT_INTEGRATION:\r\n          type: boolean\r\n        ANALYTICS:\r\n          type: boolean\r\n        MODELS:\r\n          type: boolean\r\n        PREDICT:\r\n          type: boolean\r\n      required:\r\n      - ANALYTICS\r\n      - GIT_INTEGRATION\r\n      - MODELS\r\n      - PREDICT\r\n    ProjectFileRequest:\r\n      type: object\r\n      properties:\r\n        project_file:\r\n          type: string\r\n          format: binary\r\n      required:\r\n      - project_file\r\n    ProjectRead:\r\n      type: object\r\n      properties:\r\n        url:\r\n          type: string\r\n          format: uri\r\n          readOnly: true\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        name:\r\n          type: string\r\n          readOnly: true\r\n        owner:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          readOnly: true\r\n          nullable: true\r\n        assignee:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          readOnly: true\r\n          nullable: true\r\n        guide_id:\r\n          type: integer\r\n          nullable: true\r\n        bug_tracker:\r\n          type: string\r\n          readOnly: true\r\n        task_subsets:\r\n          type: array\r\n          items:\r\n            type: string\r\n          readOnly: true\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        updated_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        status:\r\n          allOf:\r\n          - $ref: '#/components/schemas/JobStatus'\r\n          readOnly: true\r\n        dimension:\r\n          type: string\r\n          readOnly: true\r\n          nullable: true\r\n          maxLength: 16\r\n        organization:\r\n          type: integer\r\n          readOnly: true\r\n          nullable: true\r\n        target_storage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/Storage'\r\n          readOnly: true\r\n          nullable: true\r\n        source_storage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/Storage'\r\n          readOnly: true\r\n          nullable: true\r\n        tasks:\r\n          $ref: '#/components/schemas/TasksSummary'\r\n        labels:\r\n          $ref: '#/components/schemas/LabelsSummary'\r\n      required:\r\n      - labels\r\n      - tasks\r\n    ProjectWriteRequest:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 256\r\n        labels:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/PatchedLabelRequest'\r\n          writeOnly: true\r\n          default: []\r\n        owner_id:\r\n          type: integer\r\n          writeOnly: true\r\n          nullable: true\r\n        assignee_id:\r\n          type: integer\r\n          writeOnly: true\r\n          nullable: true\r\n        bug_tracker:\r\n          type: string\r\n          maxLength: 2000\r\n        target_storage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/StorageRequest'\r\n          writeOnly: true\r\n        source_storage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/StorageRequest'\r\n          writeOnly: true\r\n        task_subsets:\r\n          type: array\r\n          items:\r\n            type: string\r\n            minLength: 1\r\n          writeOnly: true\r\n      required:\r\n      - name\r\n    ProviderTypeEnum:\r\n      enum:\r\n      - AWS_S3_BUCKET\r\n      - AZURE_CONTAINER\r\n      - GOOGLE_DRIVE\r\n      - GOOGLE_CLOUD_STORAGE\r\n      type: string\r\n      description: |-\r\n        * `AWS_S3_BUCKET` - AWS_S3\r\n        * `AZURE_CONTAINER` - AZURE_CONTAINER\r\n        * `GOOGLE_DRIVE` - GOOGLE_DRIVE\r\n        * `GOOGLE_CLOUD_STORAGE` - GOOGLE_CLOUD_STORAGE\r\n    QualityEnum:\r\n      enum:\r\n      - compressed\r\n      - original\r\n      type: string\r\n      description: |-\r\n        * `compressed` - compressed\r\n        * `original` - original\r\n    QualityReport:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        job_id:\r\n          type: integer\r\n          nullable: true\r\n          readOnly: true\r\n        task_id:\r\n          type: integer\r\n          nullable: true\r\n          readOnly: true\r\n        parent_id:\r\n          type: integer\r\n          nullable: true\r\n          readOnly: true\r\n        target:\r\n          $ref: '#/components/schemas/QualityReportTarget'\r\n        summary:\r\n          $ref: '#/components/schemas/QualityReportSummary'\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        target_last_updated:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        gt_last_updated:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n      required:\r\n      - summary\r\n      - target\r\n    QualityReportCreateRequest:\r\n      type: object\r\n      properties:\r\n        task_id:\r\n          type: integer\r\n          writeOnly: true\r\n      required:\r\n      - task_id\r\n    QualityReportSummary:\r\n      type: object\r\n      properties:\r\n        frame_count:\r\n          type: integer\r\n        frame_share:\r\n          type: number\r\n          format: double\r\n        conflict_count:\r\n          type: integer\r\n        warning_count:\r\n          type: integer\r\n        error_count:\r\n          type: integer\r\n        conflicts_by_type:\r\n          type: object\r\n          additionalProperties:\r\n            type: integer\r\n        valid_count:\r\n          type: integer\r\n        ds_count:\r\n          type: integer\r\n        gt_count:\r\n          type: integer\r\n      required:\r\n      - conflict_count\r\n      - conflicts_by_type\r\n      - ds_count\r\n      - error_count\r\n      - frame_count\r\n      - frame_share\r\n      - gt_count\r\n      - valid_count\r\n      - warning_count\r\n    QualityReportTarget:\r\n      enum:\r\n      - job\r\n      - task\r\n      type: string\r\n      description: |-\r\n        * `job` - JOB\r\n        * `task` - TASK\r\n    QualitySettings:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        task_id:\r\n          type: integer\r\n          readOnly: true\r\n        iou_threshold:\r\n          type: number\r\n          format: double\r\n          description: Used for distinction between matched / unmatched shapes\r\n        oks_sigma:\r\n          type: number\r\n          format: double\r\n          description: |\r\n            Like IoU threshold, but for points.\r\n            The percent of the bbox area, used as the radius of the circle around the GT point,\r\n            where the checked point is expected to be.\r\n            Read more: https://cocodataset.org/#keypoints-eval\r\n        line_thickness:\r\n          type: number\r\n          format: double\r\n          description: |\r\n            Thickness of polylines, relatively to the (image area) ^ 0.5.\r\n            The distance to the boundary around the GT line,\r\n            inside of which the checked line points should be\r\n        low_overlap_threshold:\r\n          type: number\r\n          format: double\r\n          description: |\r\n            Used for distinction between strong / weak (low_overlap) matches\r\n        compare_line_orientation:\r\n          type: boolean\r\n          description: Enables or disables polyline orientation comparison\r\n        line_orientation_threshold:\r\n          type: number\r\n          format: double\r\n          description: |\r\n            The minimal gain in the GT IoU between the given and reversed line directions\r\n            to consider the line inverted.\r\n            Only used when the 'compare_line_orientation' parameter is true\r\n        compare_groups:\r\n          type: boolean\r\n          description: Enables or disables annotation group checks\r\n        group_match_threshold:\r\n          type: number\r\n          format: double\r\n          description: |\r\n            Minimal IoU for groups to be considered matching.\r\n            Only used when the 'compare_groups' parameter is true\r\n        check_covered_annotations:\r\n          type: boolean\r\n          description: |\r\n            Check for partially-covered annotations, useful in segmentation tasks\r\n        object_visibility_threshold:\r\n          type: number\r\n          format: double\r\n          description: |\r\n            Minimal visible area percent of the spatial annotations (polygons, masks)\r\n            for reporting covered annotations.\r\n            Only used when the 'object_visibility_threshold' parameter is true\r\n        panoptic_comparison:\r\n          type: boolean\r\n          description: |\r\n            Use only the visible part of the masks and polygons in comparisons\r\n        compare_attributes:\r\n          type: boolean\r\n          description: Enables or disables annotation attribute comparison\r\n    RegisterSerializerWithSubscriptions:\r\n      type: object\r\n      properties:\r\n        username:\r\n          type: string\r\n          maxLength: 150\r\n          minLength: 5\r\n        email:\r\n          type: string\r\n          format: email\r\n        first_name:\r\n          type: string\r\n        last_name:\r\n          type: string\r\n        confirmations:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/UserAgreement'\r\n      required:\r\n      - email\r\n      - username\r\n    RegisterSerializerWithSubscriptionsRequest:\r\n      type: object\r\n      properties:\r\n        username:\r\n          type: string\r\n          minLength: 5\r\n          maxLength: 150\r\n        email:\r\n          type: string\r\n          format: email\r\n          minLength: 1\r\n        password1:\r\n          type: string\r\n          writeOnly: true\r\n          minLength: 1\r\n        password2:\r\n          type: string\r\n          writeOnly: true\r\n          minLength: 1\r\n        first_name:\r\n          type: string\r\n          minLength: 1\r\n        last_name:\r\n          type: string\r\n          minLength: 1\r\n        confirmations:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/UserAgreementRequest'\r\n      required:\r\n      - email\r\n      - password1\r\n      - password2\r\n      - username\r\n    RestAuthDetail:\r\n      type: object\r\n      properties:\r\n        detail:\r\n          type: string\r\n          readOnly: true\r\n    RoleEnum:\r\n      enum:\r\n      - worker\r\n      - supervisor\r\n      - maintainer\r\n      - owner\r\n      type: string\r\n      description: |-\r\n        * `worker` - Worker\r\n        * `supervisor` - Supervisor\r\n        * `maintainer` - Maintainer\r\n        * `owner` - Owner\r\n    RqId:\r\n      type: object\r\n      properties:\r\n        rq_id:\r\n          type: string\r\n          description: Request id\r\n      required:\r\n      - rq_id\r\n    RqStatus:\r\n      type: object\r\n      properties:\r\n        state:\r\n          $ref: '#/components/schemas/RqStatusStateEnum'\r\n        message:\r\n          type: string\r\n          default: ''\r\n        progress:\r\n          type: number\r\n          format: double\r\n          maximum: 100\r\n          default: 0.0\r\n      required:\r\n      - state\r\n    RqStatusStateEnum:\r\n      enum:\r\n      - Queued\r\n      - Started\r\n      - Finished\r\n      - Failed\r\n      type: string\r\n      description: |-\r\n        * `Queued` - Queued\r\n        * `Started` - Started\r\n        * `Finished` - Finished\r\n        * `Failed` - Failed\r\n    SSOOIDCAuthMethod:\r\n      type: object\r\n      properties:\r\n        is_enabled:\r\n          type: boolean\r\n          default: false\r\n        icon:\r\n          type: string\r\n          nullable: true\r\n        public_name:\r\n          type: string\r\n        selection_schema:\r\n          $ref: '#/components/schemas/SelectionSchemaEnum'\r\n      required:\r\n      - public_name\r\n      - selection_schema\r\n    SelectionSchemaEnum:\r\n      enum:\r\n      - email_address\r\n      - lowest_weight\r\n      type: string\r\n      description: |-\r\n        * `email_address` - Email Address\r\n        * `lowest_weight` - Lowest Weight\r\n    SeverityEnum:\r\n      enum:\r\n      - warning\r\n      - error\r\n      type: string\r\n      description: |-\r\n        * `warning` - WARNING\r\n        * `error` - ERROR\r\n    ShapeType:\r\n      enum:\r\n      - rectangle\r\n      - polygon\r\n      - polyline\r\n      - points\r\n      - ellipse\r\n      - cuboid\r\n      - mask\r\n      - skeleton\r\n      type: string\r\n      description: |-\r\n        * `rectangle` - RECTANGLE\r\n        * `polygon` - POLYGON\r\n        * `polyline` - POLYLINE\r\n        * `points` - POINTS\r\n        * `ellipse` - ELLIPSE\r\n        * `cuboid` - CUBOID\r\n        * `mask` - MASK\r\n        * `skeleton` - SKELETON\r\n    SigningRequest:\r\n      type: object\r\n      properties:\r\n        url:\r\n          type: string\r\n          minLength: 1\r\n      required:\r\n      - url\r\n    SocialAuthMethod:\r\n      type: object\r\n      properties:\r\n        is_enabled:\r\n          type: boolean\r\n          default: false\r\n        icon:\r\n          type: string\r\n          nullable: true\r\n        public_name:\r\n          type: string\r\n      required:\r\n      - public_name\r\n    SocialAuthMethods:\r\n      type: object\r\n      properties:\r\n        google:\r\n          $ref: '#/components/schemas/SocialAuthMethod'\r\n        github:\r\n          $ref: '#/components/schemas/SocialAuthMethod'\r\n        amazon-cognito:\r\n          $ref: '#/components/schemas/SocialAuthMethod'\r\n        sso:\r\n          $ref: '#/components/schemas/SSOOIDCAuthMethod'\r\n      required:\r\n      - amazon-cognito\r\n      - github\r\n      - google\r\n      - sso\r\n    SocialLoginSerializerExRequest:\r\n      type: object\r\n      properties:\r\n        access_token:\r\n          type: string\r\n        code:\r\n          type: string\r\n        id_token:\r\n          type: string\r\n        auth_params:\r\n          type: string\r\n          default: ''\r\n        process:\r\n          type: string\r\n          default: login\r\n        scope:\r\n          type: string\r\n          default: ''\r\n    SortingMethod:\r\n      enum:\r\n      - lexicographical\r\n      - natural\r\n      - predefined\r\n      - random\r\n      type: string\r\n      description: |-\r\n        * `lexicographical` - LEXICOGRAPHICAL\r\n        * `natural` - NATURAL\r\n        * `predefined` - PREDEFINED\r\n        * `random` - RANDOM\r\n    Storage:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        location:\r\n          $ref: '#/components/schemas/LocationEnum'\r\n        cloud_storage_id:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: -2147483648\r\n          nullable: true\r\n    StorageMethod:\r\n      enum:\r\n      - cache\r\n      - file_system\r\n      type: string\r\n      description: |-\r\n        * `cache` - CACHE\r\n        * `file_system` - FILE_SYSTEM\r\n    StorageRequest:\r\n      type: object\r\n      properties:\r\n        location:\r\n          $ref: '#/components/schemas/LocationEnum'\r\n        cloud_storage_id:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: -2147483648\r\n          nullable: true\r\n    StorageType:\r\n      enum:\r\n      - cloud_storage\r\n      - local\r\n      - share\r\n      type: string\r\n      description: |-\r\n        * `cloud_storage` - CLOUD_STORAGE\r\n        * `local` - LOCAL\r\n        * `share` - SHARE\r\n    SubLabeledShape:\r\n      type: object\r\n      properties:\r\n        type:\r\n          $ref: '#/components/schemas/ShapeType'\r\n        occluded:\r\n          type: boolean\r\n          default: false\r\n        outside:\r\n          type: boolean\r\n          default: false\r\n        z_order:\r\n          type: integer\r\n          default: 0\r\n        rotation:\r\n          type: number\r\n          format: double\r\n          maximum: 360\r\n          minimum: 0\r\n          default: 0.0\r\n        points:\r\n          type: array\r\n          items:\r\n            type: number\r\n            format: double\r\n        id:\r\n          type: integer\r\n          nullable: true\r\n        frame:\r\n          type: integer\r\n          minimum: 0\r\n        label_id:\r\n          type: integer\r\n          minimum: 0\r\n        group:\r\n          type: integer\r\n          minimum: 0\r\n          nullable: true\r\n        source:\r\n          type: string\r\n          default: manual\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeVal'\r\n          default: []\r\n      required:\r\n      - frame\r\n      - label_id\r\n      - type\r\n    SubLabeledShapeRequest:\r\n      type: object\r\n      properties:\r\n        type:\r\n          $ref: '#/components/schemas/ShapeType'\r\n        occluded:\r\n          type: boolean\r\n          default: false\r\n        outside:\r\n          type: boolean\r\n          default: false\r\n        z_order:\r\n          type: integer\r\n          default: 0\r\n        rotation:\r\n          type: number\r\n          format: double\r\n          maximum: 360\r\n          minimum: 0\r\n          default: 0.0\r\n        points:\r\n          type: array\r\n          items:\r\n            type: number\r\n            format: double\r\n        id:\r\n          type: integer\r\n          nullable: true\r\n        frame:\r\n          type: integer\r\n          minimum: 0\r\n        label_id:\r\n          type: integer\r\n          minimum: 0\r\n        group:\r\n          type: integer\r\n          minimum: 0\r\n          nullable: true\r\n        source:\r\n          type: string\r\n          minLength: 1\r\n          default: manual\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeValRequest'\r\n          default: []\r\n      required:\r\n      - frame\r\n      - label_id\r\n      - type\r\n    SubLabeledTrack:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          nullable: true\r\n        frame:\r\n          type: integer\r\n          minimum: 0\r\n        label_id:\r\n          type: integer\r\n          minimum: 0\r\n        group:\r\n          type: integer\r\n          minimum: 0\r\n          nullable: true\r\n        source:\r\n          type: string\r\n          default: manual\r\n        shapes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/TrackedShape'\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeVal'\r\n          default: []\r\n      required:\r\n      - frame\r\n      - label_id\r\n      - shapes\r\n    SubLabeledTrackRequest:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          nullable: true\r\n        frame:\r\n          type: integer\r\n          minimum: 0\r\n        label_id:\r\n          type: integer\r\n          minimum: 0\r\n        group:\r\n          type: integer\r\n          minimum: 0\r\n          nullable: true\r\n        source:\r\n          type: string\r\n          minLength: 1\r\n          default: manual\r\n        shapes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/TrackedShapeRequest'\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeValRequest'\r\n          default: []\r\n      required:\r\n      - frame\r\n      - label_id\r\n      - shapes\r\n    Sublabel:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n        name:\r\n          type: string\r\n          maxLength: 64\r\n        color:\r\n          type: string\r\n          description: The hex value for the RGB color. Will be generated automatically,\r\n            unless specified explicitly.\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/Attribute'\r\n          default: []\r\n          description: The list of attributes. If you want to remove an attribute,\r\n            you need to recreate the label and specify the remaining attributes.\r\n        type:\r\n          type: string\r\n          description: Associated annotation type for this label\r\n        has_parent:\r\n          type: boolean\r\n      required:\r\n      - name\r\n    SublabelRequest:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 64\r\n        color:\r\n          type: string\r\n          description: The hex value for the RGB color. Will be generated automatically,\r\n            unless specified explicitly.\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeRequest'\r\n          default: []\r\n          description: The list of attributes. If you want to remove an attribute,\r\n            you need to recreate the label and specify the remaining attributes.\r\n        type:\r\n          type: string\r\n          description: Associated annotation type for this label\r\n        has_parent:\r\n          type: boolean\r\n      required:\r\n      - name\r\n    TaskAnnotationsUpdateRequest:\r\n      oneOf:\r\n      - $ref: '#/components/schemas/LabeledDataRequest'\r\n      - $ref: '#/components/schemas/AnnotationFileRequest'\r\n      nullable: true\r\n    TaskAnnotationsWriteRequest:\r\n      oneOf:\r\n      - $ref: '#/components/schemas/AnnotationFileRequest'\r\n      nullable: true\r\n    TaskFileRequest:\r\n      type: object\r\n      properties:\r\n        task_file:\r\n          type: string\r\n          format: binary\r\n      required:\r\n      - task_file\r\n    TaskRead:\r\n      type: object\r\n      properties:\r\n        url:\r\n          type: string\r\n          format: uri\r\n          readOnly: true\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        name:\r\n          type: string\r\n          readOnly: true\r\n        project_id:\r\n          type: integer\r\n          nullable: true\r\n        mode:\r\n          type: string\r\n          readOnly: true\r\n        owner:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          nullable: true\r\n        assignee:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          nullable: true\r\n        bug_tracker:\r\n          type: string\r\n          readOnly: true\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        updated_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        overlap:\r\n          type: integer\r\n          readOnly: true\r\n          nullable: true\r\n        segment_size:\r\n          type: integer\r\n          readOnly: true\r\n        status:\r\n          allOf:\r\n          - $ref: '#/components/schemas/JobStatus'\r\n          readOnly: true\r\n        data_chunk_size:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: 0\r\n          nullable: true\r\n          readOnly: true\r\n        data_compressed_chunk_type:\r\n          allOf:\r\n          - $ref: '#/components/schemas/ChunkType'\r\n          readOnly: true\r\n        guide_id:\r\n          type: integer\r\n          nullable: true\r\n        data_original_chunk_type:\r\n          allOf:\r\n          - $ref: '#/components/schemas/ChunkType'\r\n          readOnly: true\r\n        size:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: 0\r\n          readOnly: true\r\n        image_quality:\r\n          type: integer\r\n          maximum: 32767\r\n          minimum: 0\r\n          readOnly: true\r\n        data:\r\n          type: integer\r\n          readOnly: true\r\n        dimension:\r\n          type: string\r\n        subset:\r\n          type: string\r\n          readOnly: true\r\n        organization:\r\n          type: integer\r\n          readOnly: true\r\n          nullable: true\r\n        target_storage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/Storage'\r\n          nullable: true\r\n        source_storage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/Storage'\r\n          nullable: true\r\n        jobs:\r\n          $ref: '#/components/schemas/JobsSummary'\r\n        labels:\r\n          $ref: '#/components/schemas/LabelsSummary'\r\n      required:\r\n      - jobs\r\n      - labels\r\n    TaskWriteRequest:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 256\r\n        project_id:\r\n          type: integer\r\n          nullable: true\r\n        owner_id:\r\n          type: integer\r\n          writeOnly: true\r\n          nullable: true\r\n        assignee_id:\r\n          type: integer\r\n          writeOnly: true\r\n          nullable: true\r\n        bug_tracker:\r\n          type: string\r\n          maxLength: 2000\r\n        overlap:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: 0\r\n          nullable: true\r\n        segment_size:\r\n          type: integer\r\n          maximum: 2147483647\r\n          minimum: 0\r\n        labels:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/PatchedLabelRequest'\r\n        subset:\r\n          type: string\r\n          maxLength: 64\r\n        target_storage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/StorageRequest'\r\n          nullable: true\r\n        source_storage:\r\n          allOf:\r\n          - $ref: '#/components/schemas/StorageRequest'\r\n          nullable: true\r\n      required:\r\n      - name\r\n    TasksSummary:\r\n      type: object\r\n      properties:\r\n        count:\r\n          type: integer\r\n          default: 0\r\n        url:\r\n          type: string\r\n          format: uri\r\n          readOnly: true\r\n    Token:\r\n      type: object\r\n      description: Serializer for Token model.\r\n      properties:\r\n        key:\r\n          type: string\r\n          maxLength: 40\r\n      required:\r\n      - key\r\n    TrackedShape:\r\n      type: object\r\n      properties:\r\n        type:\r\n          $ref: '#/components/schemas/ShapeType'\r\n        occluded:\r\n          type: boolean\r\n          default: false\r\n        outside:\r\n          type: boolean\r\n          default: false\r\n        z_order:\r\n          type: integer\r\n          default: 0\r\n        rotation:\r\n          type: number\r\n          format: double\r\n          maximum: 360\r\n          minimum: 0\r\n          default: 0.0\r\n        points:\r\n          type: array\r\n          items:\r\n            type: number\r\n            format: double\r\n        id:\r\n          type: integer\r\n          nullable: true\r\n        frame:\r\n          type: integer\r\n          minimum: 0\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeVal'\r\n          default: []\r\n      required:\r\n      - frame\r\n      - type\r\n    TrackedShapeRequest:\r\n      type: object\r\n      properties:\r\n        type:\r\n          $ref: '#/components/schemas/ShapeType'\r\n        occluded:\r\n          type: boolean\r\n          default: false\r\n        outside:\r\n          type: boolean\r\n          default: false\r\n        z_order:\r\n          type: integer\r\n          default: 0\r\n        rotation:\r\n          type: number\r\n          format: double\r\n          maximum: 360\r\n          minimum: 0\r\n          default: 0.0\r\n        points:\r\n          type: array\r\n          items:\r\n            type: number\r\n            format: double\r\n        id:\r\n          type: integer\r\n          nullable: true\r\n        frame:\r\n          type: integer\r\n          minimum: 0\r\n        attributes:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/AttributeValRequest'\r\n          default: []\r\n      required:\r\n      - frame\r\n      - type\r\n    Usage:\r\n      type: object\r\n      properties:\r\n        user_id:\r\n          type: integer\r\n          nullable: true\r\n          readOnly: true\r\n        org_id:\r\n          type: integer\r\n          nullable: true\r\n          readOnly: true\r\n        function_calls:\r\n          type: string\r\n          readOnly: true\r\n    User:\r\n      type: object\r\n      properties:\r\n        url:\r\n          type: string\r\n          format: uri\r\n          readOnly: true\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        username:\r\n          type: string\r\n          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_\r\n            only.\r\n          pattern: ^[\\w.@+-]+$\r\n          maxLength: 150\r\n        first_name:\r\n          type: string\r\n          maxLength: 150\r\n        last_name:\r\n          type: string\r\n          maxLength: 150\r\n        email:\r\n          type: string\r\n          format: email\r\n          title: Email address\r\n          maxLength: 254\r\n        groups:\r\n          type: array\r\n          items:\r\n            type: string\r\n        is_staff:\r\n          type: boolean\r\n          title: Staff status\r\n          description: Designates whether the user can log into this admin site.\r\n        is_superuser:\r\n          type: boolean\r\n          title: Superuser status\r\n          description: Designates that this user has all permissions without explicitly\r\n            assigning them.\r\n        is_active:\r\n          type: boolean\r\n          title: Active\r\n          description: Designates whether this user should be treated as active. Unselect\r\n            this instead of deleting accounts.\r\n        last_login:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n          nullable: true\r\n        date_joined:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n      required:\r\n      - groups\r\n      - username\r\n    UserAgreement:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          maxLength: 256\r\n        url_display_text:\r\n          type: string\r\n          default: ''\r\n          maxLength: 2048\r\n        url:\r\n          type: string\r\n          default: ''\r\n          maxLength: 2048\r\n        text_prefix:\r\n          type: string\r\n          default: ''\r\n          maxLength: 2048\r\n        required:\r\n          type: boolean\r\n          default: false\r\n        value:\r\n          type: boolean\r\n          default: false\r\n      required:\r\n      - name\r\n    UserAgreementRequest:\r\n      type: object\r\n      properties:\r\n        name:\r\n          type: string\r\n          minLength: 1\r\n          maxLength: 256\r\n        url_display_text:\r\n          type: string\r\n          minLength: 1\r\n          default: ''\r\n          maxLength: 2048\r\n        url:\r\n          type: string\r\n          minLength: 1\r\n          default: ''\r\n          maxLength: 2048\r\n        text_prefix:\r\n          type: string\r\n          minLength: 1\r\n          default: ''\r\n          maxLength: 2048\r\n        required:\r\n          type: boolean\r\n          default: false\r\n        value:\r\n          type: boolean\r\n          default: false\r\n      required:\r\n      - name\r\n    WebhookContentType:\r\n      enum:\r\n      - application/json\r\n      type: string\r\n      description: '* `application/json` - JSON'\r\n    WebhookDeliveryRead:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        webhook_id:\r\n          type: integer\r\n          readOnly: true\r\n        event:\r\n          type: string\r\n          readOnly: true\r\n        status_code:\r\n          type: integer\r\n          readOnly: true\r\n          nullable: true\r\n        redelivery:\r\n          type: boolean\r\n          readOnly: true\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        updated_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        changed_fields:\r\n          type: string\r\n          readOnly: true\r\n        request:\r\n          type: object\r\n          additionalProperties: {}\r\n          readOnly: true\r\n        response:\r\n          type: object\r\n          additionalProperties: {}\r\n          readOnly: true\r\n    WebhookRead:\r\n      type: object\r\n      properties:\r\n        id:\r\n          type: integer\r\n          readOnly: true\r\n        url:\r\n          type: string\r\n          format: uri\r\n          readOnly: true\r\n        target_url:\r\n          type: string\r\n          format: uri\r\n          readOnly: true\r\n        description:\r\n          type: string\r\n          readOnly: true\r\n        type:\r\n          $ref: '#/components/schemas/WebhookType'\r\n        content_type:\r\n          $ref: '#/components/schemas/WebhookContentType'\r\n        is_active:\r\n          type: boolean\r\n          readOnly: true\r\n        enable_ssl:\r\n          type: boolean\r\n          readOnly: true\r\n        created_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        updated_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n        owner:\r\n          allOf:\r\n          - $ref: '#/components/schemas/BasicUser'\r\n          readOnly: true\r\n          nullable: true\r\n        project_id:\r\n          type: integer\r\n          nullable: true\r\n        organization:\r\n          type: integer\r\n          readOnly: true\r\n          nullable: true\r\n        events:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/EventsEnum'\r\n          readOnly: true\r\n        last_status:\r\n          type: integer\r\n          readOnly: true\r\n        last_delivery_date:\r\n          type: string\r\n          format: date-time\r\n          readOnly: true\r\n      required:\r\n      - content_type\r\n      - type\r\n    WebhookType:\r\n      enum:\r\n      - organization\r\n      - project\r\n      type: string\r\n      description: |-\r\n        * `organization` - ORGANIZATION\r\n        * `project` - PROJECT\r\n    WebhookWriteRequest:\r\n      type: object\r\n      properties:\r\n        target_url:\r\n          type: string\r\n          format: uri\r\n          minLength: 1\r\n          maxLength: 8192\r\n        description:\r\n          type: string\r\n          maxLength: 128\r\n        type:\r\n          $ref: '#/components/schemas/WebhookType'\r\n        content_type:\r\n          $ref: '#/components/schemas/WebhookContentType'\r\n        secret:\r\n          type: string\r\n          maxLength: 64\r\n        is_active:\r\n          type: boolean\r\n        enable_ssl:\r\n          type: boolean\r\n        project_id:\r\n          type: integer\r\n          writeOnly: true\r\n          nullable: true\r\n        events:\r\n          type: array\r\n          items:\r\n            $ref: '#/components/schemas/EventsEnum'\r\n          writeOnly: true\r\n      required:\r\n      - events\r\n      - target_url\r\n      - type\r\n  securitySchemes:\r\n    basicAuth:\r\n      type: http\r\n      scheme: basic\r\n    csrfAuth:\r\n      type: apiKey\r\n      in: cookie\r\n      name: csrftoken\r\n      description: Can be sent as a cookie or as the X-CSRFTOKEN header\r\n    sessionAuth:\r\n      type: apiKey\r\n      in: cookie\r\n      name: sessionid\r\n    signatureAuth:\r\n      type: apiKey\r\n      in: query\r\n      name: sign\r\n      description: Can be used to share URLs to private links\r\n    tokenAuth:\r\n      type: apiKey\r\n      in: header\r\n      name: Authorization\r\n      description: |2\r\n\r\n        To authenticate using a token (or API key), you need to have 3 components in a request:\r\n        - the 'sessionid' cookie\r\n        - the 'csrftoken' cookie or 'X-CSRFTOKEN' header\r\n        - the 'Authentication' header with the 'Token ' prefix\r\n\r\n        You can obtain an API key (the token) from the server response on\r\n        the basic auth request.\r\n      x-token-prefix: Token\r\nexternalDocs:\r\n  description: CVAT documentation\r\n  url: https://opencv.github.io/cvat/docs/\r\n",
      "url": "http://redocly.github.io/redoc/openapi.yaml",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": false,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "ApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": false,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "generatePrepareRequestAndProcessResponseAsAsyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "Cvat{controller}Client",
      "operationGenerationMode": "MultipleClientsFromFirstTagAndOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": true,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "CvatApi",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": true,
      "generateNullableReferenceTypes": true,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": null,
      "newLineBehavior": "Auto"
    }
  }
}